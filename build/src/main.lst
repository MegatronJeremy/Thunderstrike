GAS LISTING /tmp/ccvstXS3.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_ZZ4mainENUlPvE_4_FUNES_:
   9              	.LFB105:
  10              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/TCB.h"
   2:src/main.cpp  **** #include "../h/Riscv.h"
   3:src/main.cpp  **** #include "../h/TimerInterrupt.h"
   4:src/main.cpp  **** #include "../h/SysPrint.h"
   5:src/main.cpp  **** #include "../h/Scheduler.h"
   6:src/main.cpp  **** #include "../h/ThreadCollector.h"
   7:src/main.cpp  **** #include "../h/IdleThread.h"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** void userMain();
  10:src/main.cpp  **** 
  11:src/main.cpp  **** int main() {
  12:src/main.cpp  ****     kprintString("Starting main\n");
  13:src/main.cpp  ****     TCB *main = TCB::createKernelThread();
  14:src/main.cpp  ****     kprintString("Created main thread\n");
  15:src/main.cpp  ****     TCB::running = main;
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     TCB *uMain = TCB::createUserThread([](void *){userMain();}, nullptr);
  11              		.loc 1 17 40
  12              		.cfi_startproc
  13 0000 130101FF 		addi	sp,sp,-16
  14              		.cfi_def_cfa_offset 16
  15 0004 23341100 		sd	ra,8(sp)
  16 0008 23308100 		sd	s0,0(sp)
  17              		.cfi_offset 1, -8
  18              		.cfi_offset 8, -16
  19 000c 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LVL0:
  22              	.LBB22:
  23              	.LBB23:
  24              		.loc 1 17 51
  25              		.loc 1 17 59 is_stmt 0
  26 0010 97000000 		call	_Z8userMainv@plt
  26      E7800000 
  27              	.LVL1:
  28              	.LBE23:
  29              	.LBE22:
  30              		.loc 1 17 62
  31 0018 83308100 		ld	ra,8(sp)
  32              		.cfi_restore 1
  33 001c 03340100 		ld	s0,0(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0020 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 0024 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE105:
GAS LISTING /tmp/ccvstXS3.s 			page 2


  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 53746172 		.string	"Starting main\n"
  45      74696E67 
  45      206D6169 
  45      6E0A00
  46 000f 00       		.align	3
  47              	.LC1:
  48 0010 43726561 		.string	"Created main thread\n"
  48      74656420 
  48      6D61696E 
  48      20746872 
  48      6561640A 
  49 0025 000000   		.align	3
  50              	.LC2:
  51 0028 43726561 		.string	"Created user main thread\n"
  51      74656420 
  51      75736572 
  51      206D6169 
  51      6E207468 
  52 0042 00000000 		.align	3
  52      0000
  53              	.LC3:
  54 0048 4D61696E 		.string	"Main finished\n"
  54      2066696E 
  54      69736865 
  54      640A00
  55              		.text
  56              		.align	2
  57              		.globl	main
  59              	main:
  60              	.LFB103:
  11:src/main.cpp  ****     kprintString("Starting main\n");
  61              		.loc 1 11 12 is_stmt 1
  62              		.cfi_startproc
  63              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  64              		.cfi_lsda 0x1b,.LLSDA103
  65 0028 130101FE 		addi	sp,sp,-32
  66              		.cfi_def_cfa_offset 32
  67 002c 233C1100 		sd	ra,24(sp)
  68 0030 23388100 		sd	s0,16(sp)
  69 0034 23349100 		sd	s1,8(sp)
  70 0038 23302101 		sd	s2,0(sp)
  71              		.cfi_offset 1, -8
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -24
  74              		.cfi_offset 18, -32
  75 003c 13040102 		addi	s0,sp,32
  76              		.cfi_def_cfa 8, 0
  12:src/main.cpp  ****     TCB *main = TCB::createKernelThread();
  77              		.loc 1 12 5
  12:src/main.cpp  ****     TCB *main = TCB::createKernelThread();
  78              		.loc 1 12 17 is_stmt 0
  79 0040 17050000 		lla	a0,.LC0
  79      13050500 
  80              	.LEHB0:
GAS LISTING /tmp/ccvstXS3.s 			page 3


  81 0048 97000000 		call	_Z12kprintStringPKc@plt
  81      E7800000 
  82              	.LVL2:
  13:src/main.cpp  ****     kprintString("Created main thread\n");
  83              		.loc 1 13 5 is_stmt 1
  84              	.LBB43:
  85              	.LBB44:
  86              		.file 2 "src/../h/TCB.h"
   1:src/../h/TCB.h **** //
   2:src/../h/TCB.h **** // Created by xparh on 4/24/2022.
   3:src/../h/TCB.h **** //
   4:src/../h/TCB.h **** 
   5:src/../h/TCB.h **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_TCB_H
   6:src/../h/TCB.h **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_TCB_H
   7:src/../h/TCB.h **** 
   8:src/../h/TCB.h **** #include "../lib/hw.h"
   9:src/../h/TCB.h **** #include "KernelObject.h"
  10:src/../h/TCB.h **** #include "List.h"
  11:src/../h/TCB.h **** #include "Mutex.h"
  12:src/../h/TCB.h **** #include "ThreadNode.h"
  13:src/../h/TCB.h **** #include "ThreadList.h"
  14:src/../h/TCB.h **** 
  15:src/../h/TCB.h **** // Thread Control Block
  16:src/../h/TCB.h **** class TCB : public KernelObject {
  17:src/../h/TCB.h **** public:
  18:src/../h/TCB.h ****     using Body = void (*)(void *);
  19:src/../h/TCB.h **** 
  20:src/../h/TCB.h ****     static TCB *createKernelThread(Body body, void *args);
  21:src/../h/TCB.h **** 
  22:src/../h/TCB.h ****     static TCB *createKernelThread(Body body, void *args, uint64 *threadStack);
  23:src/../h/TCB.h **** 
  24:src/../h/TCB.h ****     static TCB *createUserThread(Body body, void *args);
  25:src/../h/TCB.h **** 
  26:src/../h/TCB.h ****     static TCB *createUserThread(Body body, void *args, uint64 *threadStack);
  27:src/../h/TCB.h **** 
  28:src/../h/TCB.h ****     int join();
  29:src/../h/TCB.h **** 
  30:src/../h/TCB.h ****     static void yield() {
  31:src/../h/TCB.h ****         __asm__ volatile ("ecall");
  32:src/../h/TCB.h ****     }
  33:src/../h/TCB.h **** 
  34:src/../h/TCB.h ****     static void dispatch();
  35:src/../h/TCB.h **** 
  36:src/../h/TCB.h ****     static void exit();
  37:src/../h/TCB.h **** 
  38:src/../h/TCB.h ****     bool isBlocked() const {
  39:src/../h/TCB.h ****         return status == BLOCKED;
  40:src/../h/TCB.h ****     }
  41:src/../h/TCB.h **** 
  42:src/../h/TCB.h ****     void setBlocked() {
  43:src/../h/TCB.h ****         status = BLOCKED;
  44:src/../h/TCB.h ****     }
  45:src/../h/TCB.h **** 
  46:src/../h/TCB.h ****     bool isReady() const {
  47:src/../h/TCB.h ****         return status == READY;
  48:src/../h/TCB.h ****     }
  49:src/../h/TCB.h **** 
GAS LISTING /tmp/ccvstXS3.s 			page 4


  50:src/../h/TCB.h ****     void setReady() {
  51:src/../h/TCB.h ****         status = READY;
  52:src/../h/TCB.h ****     }
  53:src/../h/TCB.h **** 
  54:src/../h/TCB.h ****     bool isFinished() const {
  55:src/../h/TCB.h ****         return status == FINISHED;
  56:src/../h/TCB.h ****     }
  57:src/../h/TCB.h **** 
  58:src/../h/TCB.h ****     void setFinished() {
  59:src/../h/TCB.h ****         status = FINISHED;
  60:src/../h/TCB.h ****     }
  61:src/../h/TCB.h **** 
  62:src/../h/TCB.h ****     bool isIdle() const {
  63:src/../h/TCB.h ****         return status == IDLE;
  64:src/../h/TCB.h ****     }
  65:src/../h/TCB.h **** 
  66:src/../h/TCB.h ****     void setIdle() {
  67:src/../h/TCB.h ****         status = IDLE;
  68:src/../h/TCB.h ****     }
  69:src/../h/TCB.h **** 
  70:src/../h/TCB.h ****     uint64 getTimeSlice() const {
  71:src/../h/TCB.h ****         return timeSlice;
  72:src/../h/TCB.h ****     }
  73:src/../h/TCB.h **** 
  74:src/../h/TCB.h ****     time_t getBlockedTime() const {
  75:src/../h/TCB.h ****         return blockedTime;
  76:src/../h/TCB.h ****     }
  77:src/../h/TCB.h **** 
  78:src/../h/TCB.h ****     void setBlockedTime(time_t blockedTime) {
  79:src/../h/TCB.h ****         this->blockedTime = blockedTime;
  80:src/../h/TCB.h ****     }
  81:src/../h/TCB.h **** 
  82:src/../h/TCB.h ****     void decBlockedTime(time_t time = 1) {
  83:src/../h/TCB.h ****         this->blockedTime -= time;
  84:src/../h/TCB.h ****     }
  85:src/../h/TCB.h **** 
  86:src/../h/TCB.h ****     const Mutex *getMutex() const {
  87:src/../h/TCB.h ****         return &mutex;
  88:src/../h/TCB.h ****     }
  89:src/../h/TCB.h **** 
  90:src/../h/TCB.h ****     uint64 getSsp() const {
  91:src/../h/TCB.h ****         return ssp;
  92:src/../h/TCB.h ****     }
  93:src/../h/TCB.h **** 
  94:src/../h/TCB.h ****     uint64 getSavedContext() const {
  95:src/../h/TCB.h ****         return (uint64) (kernelStack + DEFAULT_STACK_SIZE - 32);
  96:src/../h/TCB.h ****     }
  97:src/../h/TCB.h **** 
  98:src/../h/TCB.h ****     uint64 *getThreadStack() const {
  99:src/../h/TCB.h ****         return threadStack;
 100:src/../h/TCB.h ****     };
 101:src/../h/TCB.h **** 
 102:src/../h/TCB.h ****     ThreadNode *getNode() {
 103:src/../h/TCB.h ****         return &node;
 104:src/../h/TCB.h ****     }
 105:src/../h/TCB.h **** 
 106:src/../h/TCB.h ****     static TCB *createKernelThread() {
GAS LISTING /tmp/ccvstXS3.s 			page 5


 107:src/../h/TCB.h ****         return new TCB();
  87              		.loc 2 107 9
  88              	.LBB45:
  89              	.LBB46:
  90              		.file 3 "src/../h/KernelObject.h"
   1:src/../h/KernelObject.h **** #ifndef _KERNEL_OBJECT_H
   2:src/../h/KernelObject.h **** #define _KERNEL_OBJECT_H
   3:src/../h/KernelObject.h **** 
   4:src/../h/KernelObject.h **** //#include "MemoryAllocator.h"
   5:src/../h/KernelObject.h **** #include "../lib/hw.h"
   6:src/../h/KernelObject.h **** extern void *kmalloc(size_t);
   7:src/../h/KernelObject.h **** extern int kfree(void *);
   8:src/../h/KernelObject.h **** 
   9:src/../h/KernelObject.h **** class KernelObject {
  10:src/../h/KernelObject.h **** public:
  11:src/../h/KernelObject.h ****     static void *operator new(size_t size) {
  12:src/../h/KernelObject.h ****         size = (size - 1) / MEM_BLOCK_SIZE + 1;
  91              		.loc 3 12 9
  13:src/../h/KernelObject.h ****         return kmalloc(size);
  92              		.loc 3 13 9
  93              		.loc 3 13 23 is_stmt 0
  94 0050 13054000 		li	a0,4
  95 0054 97000000 		call	_Z7kmallocm@plt
  95      E7800000 
  96              	.LVL3:
  97              	.LEHE0:
  98 005c 93040500 		mv	s1,a0
  99              	.LVL4:
 100              	.LEHB1:
 101              	.LBE46:
 102              	.LBE45:
 103 0060 97000000 		call	_ZN3TCBC1Ev@plt
 103      E7800000 
 104              	.LVL5:
 105              	.LEHE1:
 106              	.LBE44:
 107              	.LBE43:
  14:src/main.cpp  ****     TCB::running = main;
 108              		.loc 1 14 5 is_stmt 1
  14:src/main.cpp  ****     TCB::running = main;
 109              		.loc 1 14 17 is_stmt 0
 110 0068 17050000 		lla	a0,.LC1
 110      13050500 
 111              	.LEHB2:
 112 0070 97000000 		call	_Z12kprintStringPKc@plt
 112      E7800000 
 113              	.LVL6:
  15:src/main.cpp  **** 
 114              		.loc 1 15 5 is_stmt 1
  15:src/main.cpp  **** 
 115              		.loc 1 15 18 is_stmt 0
 116 0078 97070000 		la	a5,_ZN3TCB7runningE
 116      83B70700 
 117 0080 23B09700 		sd	s1,0(a5)
 118              		.loc 1 17 5 is_stmt 1
 119              	.LVL7:
 120              		.loc 1 17 39 is_stmt 0
GAS LISTING /tmp/ccvstXS3.s 			page 6


 121 0084 93050000 		li	a1,0
 122 0088 17050000 		lla	a0,_ZZ4mainENUlPvE_4_FUNES_
 122      13050500 
 123 0090 97000000 		call	_ZN3TCB16createUserThreadEPFvPvES0_@plt
 123      E7800000 
 124              	.LVL8:
 125 0098 93040500 		mv	s1,a0
 126              	.LVL9:
  18:src/main.cpp  ****     kprintString("Created user main thread\n");
 127              		.loc 1 18 5 is_stmt 1
 128              		.loc 1 18 17 is_stmt 0
 129 009c 17050000 		lla	a0,.LC2
 129      13050500 
 130 00a4 97000000 		call	_Z12kprintStringPKc@plt
 130      E7800000 
 131              	.LVL10:
  19:src/main.cpp  **** 
  20:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 132              		.loc 1 20 5 is_stmt 1
 133              		.loc 1 20 19 is_stmt 0
 134 00ac 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 134      83B70700 
 135              	.LVL11:
 136              	.LBB50:
 137              	.LBB51:
 138              		.file 4 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** #ifndef _RISCV_H
   2:src/../h/Riscv.h **** #define _RISCV_H
   3:src/../h/Riscv.h **** 
   4:src/../h/Riscv.h **** #include "../lib/hw.h"
   5:src/../h/Riscv.h **** 
   6:src/../h/Riscv.h **** #define lock()                  \
   7:src/../h/Riscv.h ****     volatile uint64 sstatus = Riscv::r_sstatus(); \
   8:src/../h/Riscv.h ****     Riscv::disableInterrupts(); \
   9:src/../h/Riscv.h **** 
  10:src/../h/Riscv.h **** #define unlock()                \
  11:src/../h/Riscv.h ****     Riscv::w_sstatus(sstatus);  \
  12:src/../h/Riscv.h **** 
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** class Riscv {
  15:src/../h/Riscv.h **** public:
  16:src/../h/Riscv.h **** 
  17:src/../h/Riscv.h ****     // disables interrupts
  18:src/../h/Riscv.h ****     static void disableInterrupts();
  19:src/../h/Riscv.h **** 
  20:src/../h/Riscv.h ****     // enables interrupts
  21:src/../h/Riscv.h ****     static void enableInterrupts();
  22:src/../h/Riscv.h **** 
  23:src/../h/Riscv.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  24:src/../h/Riscv.h ****     static void popSppSpie(bool prMode);
  25:src/../h/Riscv.h **** 
  26:src/../h/Riscv.h ****     // push a0 to saved contex
  27:src/../h/Riscv.h ****     static void pushRegisterA0(uint64 context);
  28:src/../h/Riscv.h **** 
  29:src/../h/Riscv.h ****     // push a1 to saved contex
  30:src/../h/Riscv.h ****     static void pushRegisterA1(uint64 context);
  31:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccvstXS3.s 			page 7


  32:src/../h/Riscv.h ****     // read register sp
  33:src/../h/Riscv.h ****     static uint64 r_sp();
  34:src/../h/Riscv.h **** 
  35:src/../h/Riscv.h ****     // write register sp
  36:src/../h/Riscv.h ****     static void w_sp(uint64 sp);
  37:src/../h/Riscv.h **** 
  38:src/../h/Riscv.h ****     // read old frame pointer
  39:src/../h/Riscv.h ****     static uint64 r_ps0();
  40:src/../h/Riscv.h **** 
  41:src/../h/Riscv.h ****     // read frame pointer
  42:src/../h/Riscv.h ****     static uint64 r_s0();
  43:src/../h/Riscv.h **** 
  44:src/../h/Riscv.h ****     // read register a0
  45:src/../h/Riscv.h ****     static uint64 r_a0();
  46:src/../h/Riscv.h **** 
  47:src/../h/Riscv.h ****     // write register a0
  48:src/../h/Riscv.h ****     static void w_a0(uint64 a0);
  49:src/../h/Riscv.h **** 
  50:src/../h/Riscv.h ****     // read register a1
  51:src/../h/Riscv.h ****     static uint64 r_a1();
  52:src/../h/Riscv.h **** 
  53:src/../h/Riscv.h ****     // write register a1
  54:src/../h/Riscv.h ****     static void w_a1(uint64 a1);
  55:src/../h/Riscv.h **** 
  56:src/../h/Riscv.h ****     // read register a2
  57:src/../h/Riscv.h ****     static uint64 r_a2();
  58:src/../h/Riscv.h **** 
  59:src/../h/Riscv.h ****     // write register a2
  60:src/../h/Riscv.h ****     static void w_a2(uint64 a2);
  61:src/../h/Riscv.h **** 
  62:src/../h/Riscv.h ****     // read register scause
  63:src/../h/Riscv.h ****     static uint64 r_scause();
  64:src/../h/Riscv.h **** 
  65:src/../h/Riscv.h ****     // write register scause
  66:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  67:src/../h/Riscv.h **** 
  68:src/../h/Riscv.h ****     // read register sepc
  69:src/../h/Riscv.h ****     static uint64 r_sepc();
  70:src/../h/Riscv.h **** 
  71:src/../h/Riscv.h ****     // write register sepc
  72:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  73:src/../h/Riscv.h **** 
  74:src/../h/Riscv.h ****     // read register stvec
  75:src/../h/Riscv.h ****     static uint64 r_stvec();
  76:src/../h/Riscv.h **** 
  77:src/../h/Riscv.h ****     // write register stvec
  78:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  79:src/../h/Riscv.h **** 
  80:src/../h/Riscv.h ****     // read register stval
  81:src/../h/Riscv.h ****     static uint64 r_stval();
  82:src/../h/Riscv.h **** 
  83:src/../h/Riscv.h ****     // write register stval
  84:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  85:src/../h/Riscv.h **** 
  86:src/../h/Riscv.h ****     enum BitMaskSip {
  87:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  88:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
GAS LISTING /tmp/ccvstXS3.s 			page 8


  89:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9)
  90:src/../h/Riscv.h ****     };
  91:src/../h/Riscv.h **** 
  92:src/../h/Riscv.h ****     // mask set register sip
  93:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
  94:src/../h/Riscv.h **** 
  95:src/../h/Riscv.h ****     // mask clear register sip
  96:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
  97:src/../h/Riscv.h **** 
  98:src/../h/Riscv.h ****     // read register sip
  99:src/../h/Riscv.h ****     static uint64 r_sip();
 100:src/../h/Riscv.h **** 
 101:src/../h/Riscv.h ****     // write register sip
 102:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
 103:src/../h/Riscv.h **** 
 104:src/../h/Riscv.h ****     enum BitMaskSstatus {
 105:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
 106:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
 107:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8)
 108:src/../h/Riscv.h ****     };
 109:src/../h/Riscv.h **** 
 110:src/../h/Riscv.h ****     // mask set register sstatus
 111:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
 112:src/../h/Riscv.h **** 
 113:src/../h/Riscv.h ****     // mask clear register sstatus
 114:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
 115:src/../h/Riscv.h **** 
 116:src/../h/Riscv.h ****     // read register sstatus
 117:src/../h/Riscv.h ****     static uint64 r_sstatus();
 118:src/../h/Riscv.h **** 
 119:src/../h/Riscv.h ****     // write register sstatus
 120:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
 121:src/../h/Riscv.h **** 
 122:src/../h/Riscv.h ****     // supervisor trap
 123:src/../h/Riscv.h ****     static void supervisorTrap();
 124:src/../h/Riscv.h **** 
 125:src/../h/Riscv.h **** private:
 126:src/../h/Riscv.h ****     // supervisor trap handler
 127:src/../h/Riscv.h ****     static void handleSupervisorTrap();
 128:src/../h/Riscv.h **** };
 129:src/../h/Riscv.h **** 
 130:src/../h/Riscv.h **** 
 131:src/../h/Riscv.h **** inline uint64 Riscv::r_sp() {
 132:src/../h/Riscv.h ****     uint64 volatile sp;
 133:src/../h/Riscv.h ****     __asm__ volatile ("mv %[sp], sp" : [sp] "=r"(sp));
 134:src/../h/Riscv.h ****     return sp;
 135:src/../h/Riscv.h **** }
 136:src/../h/Riscv.h **** 
 137:src/../h/Riscv.h **** inline void Riscv::w_sp(uint64 sp) {
 138:src/../h/Riscv.h ****     __asm__ volatile ("mv sp, %[sp]" : : [sp] "r"(sp));
 139:src/../h/Riscv.h **** }
 140:src/../h/Riscv.h **** 
 141:src/../h/Riscv.h **** inline uint64 Riscv::r_ps0() {
 142:src/../h/Riscv.h ****     uint64 volatile ps0, s0 = r_s0() - 8;
 143:src/../h/Riscv.h ****     __asm__ volatile ("mv %[ps0], %[s0]" : [ps0] "=r"(ps0) : [s0] "r"(s0));
 144:src/../h/Riscv.h ****     return ps0;
 145:src/../h/Riscv.h **** }
GAS LISTING /tmp/ccvstXS3.s 			page 9


 146:src/../h/Riscv.h **** 
 147:src/../h/Riscv.h **** inline uint64 Riscv::r_s0() {
 148:src/../h/Riscv.h ****     uint64 volatile s0;
 149:src/../h/Riscv.h ****     __asm__ volatile ("mv %[s0], s0" : [s0] "=r"(s0));
 150:src/../h/Riscv.h ****     return s0;
 151:src/../h/Riscv.h **** }
 152:src/../h/Riscv.h **** 
 153:src/../h/Riscv.h **** inline uint64 Riscv::r_a0() {
 154:src/../h/Riscv.h ****     uint64 volatile a0;
 155:src/../h/Riscv.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
 156:src/../h/Riscv.h ****     return a0;
 157:src/../h/Riscv.h **** }
 158:src/../h/Riscv.h **** 
 159:src/../h/Riscv.h **** inline void Riscv::w_a0(uint64 a0) {
 160:src/../h/Riscv.h ****     __asm__ volatile ("mv a0, %[a0]" : : [a0] "r"(a0));
 161:src/../h/Riscv.h **** }
 162:src/../h/Riscv.h **** 
 163:src/../h/Riscv.h **** inline uint64 Riscv::r_a1() {
 164:src/../h/Riscv.h ****     uint64 volatile a1;
 165:src/../h/Riscv.h ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
 166:src/../h/Riscv.h ****     return a1;
 167:src/../h/Riscv.h **** }
 168:src/../h/Riscv.h **** 
 169:src/../h/Riscv.h **** inline void Riscv::w_a1(uint64 a1) {
 170:src/../h/Riscv.h ****     __asm__ volatile ("mv a1, %[a1]" : : [a1] "r"(a1));
 171:src/../h/Riscv.h **** }
 172:src/../h/Riscv.h **** 
 173:src/../h/Riscv.h **** inline uint64 Riscv::r_a2() {
 174:src/../h/Riscv.h ****     uint64 volatile a2;
 175:src/../h/Riscv.h ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
 176:src/../h/Riscv.h ****     return a2;
 177:src/../h/Riscv.h **** }
 178:src/../h/Riscv.h **** 
 179:src/../h/Riscv.h **** inline void Riscv::w_a2(uint64 a2) {
 180:src/../h/Riscv.h ****     __asm__ volatile ("mv a2, %[a2]" : : [a2] "r"(a2));
 181:src/../h/Riscv.h **** }
 182:src/../h/Riscv.h **** 
 183:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
 184:src/../h/Riscv.h ****     uint64 volatile scause;
 185:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 186:src/../h/Riscv.h ****     return scause;
 187:src/../h/Riscv.h **** }
 188:src/../h/Riscv.h **** 
 189:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
 190:src/../h/Riscv.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 191:src/../h/Riscv.h **** }
 192:src/../h/Riscv.h **** 
 193:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
 194:src/../h/Riscv.h ****     uint64 volatile sepc;
 195:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 196:src/../h/Riscv.h ****     return sepc;
 197:src/../h/Riscv.h **** }
 198:src/../h/Riscv.h **** 
 199:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
 200:src/../h/Riscv.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 201:src/../h/Riscv.h **** }
 202:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccvstXS3.s 			page 10


 203:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 204:src/../h/Riscv.h ****     uint64 volatile stvec;
 205:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 206:src/../h/Riscv.h ****     return stvec;
 207:src/../h/Riscv.h **** }
 208:src/../h/Riscv.h **** 
 209:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 210:src/../h/Riscv.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 139              		.loc 4 210 5 is_stmt 1
 140              		.loc 4 210 69 is_stmt 0
 141              	#APP
 142              	# 210 "src/../h/Riscv.h" 1
 211              	}
 143              		csrw stvec, a5
 144              	# 0 "" 2
 145              	.LVL12:
 146              	#NO_APP
 147              	.LBE51:
 148              	.LBE50:
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     uMain->join();
 149              		.loc 1 22 5 is_stmt 1
 150              		.loc 1 22 16 is_stmt 0
 151 00b8 13850400 		mv	a0,s1
 152 00bc 97000000 		call	_ZN3TCB4joinEv@plt
 152      E7800000 
 153              	.LVL13:
  23:src/main.cpp  ****     TCB::yield();
 154              		.loc 1 23 5 is_stmt 1
 155              	.LBB52:
 156              	.LBB53:
  31:src/../h/TCB.h ****     }
 157              		.loc 2 31 9
  31:src/../h/TCB.h ****     }
 158              		.loc 2 31 35 is_stmt 0
 159              	#APP
 160              	# 31 "src/../h/TCB.h" 1
 161              		ecall
 162              	# 0 "" 2
 163              	#NO_APP
 164              	.LBE53:
 165              	.LBE52:
  24:src/main.cpp  **** 
  25:src/main.cpp  ****     delete ThreadCollector::getInstance();
 166              		.loc 1 25 5 is_stmt 1
 167              		.loc 1 25 40 is_stmt 0
 168 00c8 97000000 		call	_ZN15ThreadCollector11getInstanceEv@plt
 168      E7800000 
 169              	.LVL14:
 170 00d0 93040500 		mv	s1,a0
 171              	.LVL15:
 172              		.loc 1 25 42
 173 00d4 630C0500 		beqz	a0,.L5
 174              		.loc 1 25 41 discriminator 1
 175 00d8 97000000 		call	_ZN15ThreadCollectorD1Ev@plt
 175      E7800000 
 176              	.LVL16:
GAS LISTING /tmp/ccvstXS3.s 			page 11


 177              	.LBB54:
 178              	.LBB55:
  14:src/../h/KernelObject.h ****     }
  15:src/../h/KernelObject.h **** 
  16:src/../h/KernelObject.h ****     static void *operator new[](size_t size) {
  17:src/../h/KernelObject.h ****         size = (size - 1) / MEM_BLOCK_SIZE + 1;
  18:src/../h/KernelObject.h ****         return kmalloc(size);
  19:src/../h/KernelObject.h ****     }
  20:src/../h/KernelObject.h **** 
  21:src/../h/KernelObject.h ****     static void operator delete(void *addr) {
  22:src/../h/KernelObject.h ****         kfree(addr);
 179              		.loc 3 22 9 is_stmt 1 discriminator 1
 180              		.loc 3 22 14 is_stmt 0 discriminator 1
 181 00e0 13850400 		mv	a0,s1
 182 00e4 97000000 		call	_Z5kfreePv@plt
 182      E7800000 
 183              	.LVL17:
 184              	.L5:
 185              	.LBE55:
 186              	.LBE54:
  26:src/main.cpp  ****     delete IdleThread::getInstance();
 187              		.loc 1 26 5 is_stmt 1
 188              		.loc 1 26 35 is_stmt 0
 189 00ec 97000000 		call	_ZN10IdleThread11getInstanceEv@plt
 189      E7800000 
 190              	.LVL18:
 191 00f4 93040500 		mv	s1,a0
 192              		.loc 1 26 37
 193 00f8 630C0500 		beqz	a0,.L7
 194              		.loc 1 26 36 discriminator 1
 195 00fc 97000000 		call	_ZN10IdleThreadD1Ev@plt
 195      E7800000 
 196              	.LVL19:
 197              	.LBB56:
 198              	.LBB57:
 199              		.loc 3 22 9 is_stmt 1 discriminator 1
 200              		.loc 3 22 14 is_stmt 0 discriminator 1
 201 0104 13850400 		mv	a0,s1
 202 0108 97000000 		call	_Z5kfreePv@plt
 202      E7800000 
 203              	.LVL20:
 204              	.L7:
 205              	.LBE57:
 206              	.LBE56:
  27:src/main.cpp  ****     delete TimerInterrupt::getInstance();
 207              		.loc 1 27 5 is_stmt 1
 208              		.loc 1 27 39 is_stmt 0
 209 0110 97000000 		call	_ZN14TimerInterrupt11getInstanceEv@plt
 209      E7800000 
 210              	.LVL21:
 211 0118 93040500 		mv	s1,a0
 212              		.loc 1 27 41
 213 011c 630C0500 		beqz	a0,.L8
 214              		.loc 1 27 40 discriminator 1
 215 0120 97000000 		call	_ZN14TimerInterruptD1Ev@plt
 215      E7800000 
 216              	.LVL22:
GAS LISTING /tmp/ccvstXS3.s 			page 12


 217              	.LBB58:
 218              	.LBB59:
 219              		.loc 3 22 9 is_stmt 1 discriminator 1
 220              		.loc 3 22 14 is_stmt 0 discriminator 1
 221 0128 13850400 		mv	a0,s1
 222 012c 97000000 		call	_Z5kfreePv@plt
 222      E7800000 
 223              	.LVL23:
 224              	.L8:
 225              	.LBE59:
 226              	.LBE58:
  28:src/main.cpp  ****     delete Scheduler::getInstance();
 227              		.loc 1 28 5 is_stmt 1
 228              		.loc 1 28 34 is_stmt 0
 229 0134 97000000 		call	_ZN9Scheduler11getInstanceEv@plt
 229      E7800000 
 230              	.LVL24:
 231 013c 93040500 		mv	s1,a0
 232              		.loc 1 28 36
 233 0140 630C0500 		beqz	a0,.L9
 234              		.loc 1 28 35 discriminator 1
 235 0144 97000000 		call	_ZN9SchedulerD1Ev@plt
 235      E7800000 
 236              	.LVL25:
 237              	.LBB60:
 238              	.LBB61:
 239              		.loc 3 22 9 is_stmt 1 discriminator 1
 240              		.loc 3 22 14 is_stmt 0 discriminator 1
 241 014c 13850400 		mv	a0,s1
 242 0150 97000000 		call	_Z5kfreePv@plt
 242      E7800000 
 243              	.LVL26:
 244              	.L9:
 245              	.LBE61:
 246              	.LBE60:
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     kprintString("Main finished\n");
 247              		.loc 1 30 5 is_stmt 1
 248              		.loc 1 30 17 is_stmt 0
 249 0158 17050000 		lla	a0,.LC3
 249      13050500 
 250 0160 97000000 		call	_Z12kprintStringPKc@plt
 250      E7800000 
 251              	.LVL27:
 252              	.LEHE2:
  31:src/main.cpp  **** 
  32:src/main.cpp  ****     return 0;
 253              		.loc 1 32 5 is_stmt 1
  33:src/main.cpp  **** }
 254              		.loc 1 33 1 is_stmt 0
 255 0168 13050000 		li	a0,0
 256 016c 83308101 		ld	ra,24(sp)
 257              		.cfi_remember_state
 258              		.cfi_restore 1
 259 0170 03340101 		ld	s0,16(sp)
 260              		.cfi_restore 8
 261              		.cfi_def_cfa 2, 32
GAS LISTING /tmp/ccvstXS3.s 			page 13


 262 0174 83348100 		ld	s1,8(sp)
 263              		.cfi_restore 9
 264 0178 03390100 		ld	s2,0(sp)
 265              		.cfi_restore 18
 266 017c 13010102 		addi	sp,sp,32
 267              		.cfi_def_cfa_offset 0
 268 0180 67800000 		jr	ra
 269              	.LVL28:
 270              	.L10:
 271              		.cfi_restore_state
 272 0184 13090500 		mv	s2,a0
 273              	.LVL29:
 274              	.LBB62:
 275              	.LBB49:
 276              	.LBB47:
 277              	.LBB48:
 278              		.loc 3 22 9 is_stmt 1
 279              		.loc 3 22 14 is_stmt 0
 280 0188 13850400 		mv	a0,s1
 281 018c 97000000 		call	_Z5kfreePv@plt
 281      E7800000 
 282              	.LVL30:
 283 0194 13050900 		mv	a0,s2
 284              	.LEHB3:
 285 0198 97000000 		call	_Unwind_Resume@plt
 285      E7800000 
 286              	.LVL31:
 287              	.LEHE3:
 288              	.LBE48:
 289              	.LBE47:
 290              	.LBE49:
 291              	.LBE62:
 292              		.cfi_endproc
 293              	.LFE103:
 294              		.globl	__gxx_personality_v0
 295              		.section	.gcc_except_table,"a",@progbits
 296              	.LLSDA103:
 297 0000 FF       		.byte	0xff
 298 0001 FF       		.byte	0xff
 299 0002 03       		.byte	0x3
 300 0003 34       		.byte	0x34
 301 0004 00000000 		.4byte	.LEHB0-.LFB103
 302 0008 00000000 		.4byte	.LEHE0-.LEHB0
 303 000c 00000000 		.4byte	0
 304 0010 00       		.byte	0
 305 0011 00000000 		.4byte	.LEHB1-.LFB103
 306 0015 00000000 		.4byte	.LEHE1-.LEHB1
 307 0019 00000000 		.4byte	.L10-.LFB103
 308 001d 00       		.byte	0
 309 001e 00000000 		.4byte	.LEHB2-.LFB103
 310 0022 00000000 		.4byte	.LEHE2-.LEHB2
 311 0026 00000000 		.4byte	0
 312 002a 00       		.byte	0
 313 002b 00000000 		.4byte	.LEHB3-.LFB103
 314 002f 00000000 		.4byte	.LEHE3-.LEHB3
 315 0033 00000000 		.4byte	0
 316 0037 00       		.byte	0
GAS LISTING /tmp/ccvstXS3.s 			page 14


 317              		.text
 319              	.Letext0:
 320              		.file 5 "src/../h/../lib/hw.h"
 321              		.file 6 "src/../h/ThreadNode.h"
 322              		.file 7 "src/../h/ThreadList.h"
 323              		.file 8 "src/../h/TimerInterrupt.h"
 324              		.file 9 "src/../h/Scheduler.h"
 325              		.file 10 "src/../h/ThreadCollector.h"
 326              		.file 11 "src/../h/IdleThread.h"
 327              		.file 12 "src/../h/SysPrint.h"
 4422              		.align	3
 4425              	DW.ref.__gxx_personality_v0:
 4426 0000 00000000 		.dword	__gxx_personality_v0
 4426      00000000 
 4427              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 4428              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccvstXS3.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccvstXS3.s:8      .text:0000000000000000 _ZZ4mainENUlPvE_4_FUNES_
     /tmp/ccvstXS3.s:12     .text:0000000000000000 .L0 
     /tmp/ccvstXS3.s:13     .text:0000000000000000 .L0 
     /tmp/ccvstXS3.s:14     .text:0000000000000004 .L0 
     /tmp/ccvstXS3.s:17     .text:000000000000000c .L0 
     /tmp/ccvstXS3.s:18     .text:000000000000000c .L0 
     /tmp/ccvstXS3.s:20     .text:0000000000000010 .L0 
     /tmp/ccvstXS3.s:25     .text:0000000000000010 .L0 
     /tmp/ccvstXS3.s:26     .text:0000000000000010 .L0 
     /tmp/ccvstXS3.s:31     .text:0000000000000018 .L0 
     /tmp/ccvstXS3.s:32     .text:000000000000001c .L0 
     /tmp/ccvstXS3.s:34     .text:0000000000000020 .L0 
     /tmp/ccvstXS3.s:35     .text:0000000000000020 .L0 
     /tmp/ccvstXS3.s:37     .text:0000000000000024 .L0 
     /tmp/ccvstXS3.s:39     .text:0000000000000028 .L0 
     /tmp/ccvstXS3.s:59     .text:0000000000000028 main
     /tmp/ccvstXS3.s:62     .text:0000000000000028 .L0 
     /tmp/ccvstXS3.s:4425   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccvstXS3.s:65     .text:0000000000000028 .L0 
     /tmp/ccvstXS3.s:66     .text:000000000000002c .L0 
     /tmp/ccvstXS3.s:71     .text:000000000000003c .L0 
     /tmp/ccvstXS3.s:72     .text:000000000000003c .L0 
     /tmp/ccvstXS3.s:73     .text:000000000000003c .L0 
     /tmp/ccvstXS3.s:74     .text:000000000000003c .L0 
     /tmp/ccvstXS3.s:76     .text:0000000000000040 .L0 
     /tmp/ccvstXS3.s:78     .text:0000000000000040 .L0 
     /tmp/ccvstXS3.s:79     .text:0000000000000040 .L0 
     /tmp/ccvstXS3.s:87     .text:0000000000000050 .L0 
     /tmp/ccvstXS3.s:91     .text:0000000000000050 .L0 
     /tmp/ccvstXS3.s:92     .text:0000000000000050 .L0 
     /tmp/ccvstXS3.s:93     .text:0000000000000050 .L0 
     /tmp/ccvstXS3.s:94     .text:0000000000000050 .L0 
     /tmp/ccvstXS3.s:109    .text:0000000000000068 .L0 
     /tmp/ccvstXS3.s:110    .text:0000000000000068 .L0 
     /tmp/ccvstXS3.s:115    .text:0000000000000078 .L0 
     /tmp/ccvstXS3.s:116    .text:0000000000000078 .L0 
     /tmp/ccvstXS3.s:120    .text:0000000000000084 .L0 
     /tmp/ccvstXS3.s:121    .text:0000000000000084 .L0 
     /tmp/ccvstXS3.s:128    .text:000000000000009c .L0 
     /tmp/ccvstXS3.s:129    .text:000000000000009c .L0 
     /tmp/ccvstXS3.s:133    .text:00000000000000ac .L0 
     /tmp/ccvstXS3.s:134    .text:00000000000000ac .L0 
     /tmp/ccvstXS3.s:140    .text:00000000000000b4 .L0 
    src/../h/Riscv.h:210    .text:00000000000000b4 .L0 
     /tmp/ccvstXS3.s:150    .text:00000000000000b8 .L0 
     /tmp/ccvstXS3.s:151    .text:00000000000000b8 .L0 
     /tmp/ccvstXS3.s:157    .text:00000000000000c4 .L0 
     /tmp/ccvstXS3.s:158    .text:00000000000000c4 .L0 
      src/../h/TCB.h:31     .text:00000000000000c4 .L0 
     /tmp/ccvstXS3.s:167    .text:00000000000000c8 .L0 
     /tmp/ccvstXS3.s:168    .text:00000000000000c8 .L0 
     /tmp/ccvstXS3.s:173    .text:00000000000000d4 .L0 
     /tmp/ccvstXS3.s:175    .text:00000000000000d8 .L0 
     /tmp/ccvstXS3.s:180    .text:00000000000000e0 .L0 
     /tmp/ccvstXS3.s:181    .text:00000000000000e0 .L0 
GAS LISTING /tmp/ccvstXS3.s 			page 16


     /tmp/ccvstXS3.s:188    .text:00000000000000ec .L0 
     /tmp/ccvstXS3.s:189    .text:00000000000000ec .L0 
     /tmp/ccvstXS3.s:193    .text:00000000000000f8 .L0 
     /tmp/ccvstXS3.s:195    .text:00000000000000fc .L0 
     /tmp/ccvstXS3.s:200    .text:0000000000000104 .L0 
     /tmp/ccvstXS3.s:201    .text:0000000000000104 .L0 
     /tmp/ccvstXS3.s:208    .text:0000000000000110 .L0 
     /tmp/ccvstXS3.s:209    .text:0000000000000110 .L0 
     /tmp/ccvstXS3.s:213    .text:000000000000011c .L0 
     /tmp/ccvstXS3.s:215    .text:0000000000000120 .L0 
     /tmp/ccvstXS3.s:220    .text:0000000000000128 .L0 
     /tmp/ccvstXS3.s:221    .text:0000000000000128 .L0 
     /tmp/ccvstXS3.s:228    .text:0000000000000134 .L0 
     /tmp/ccvstXS3.s:229    .text:0000000000000134 .L0 
     /tmp/ccvstXS3.s:233    .text:0000000000000140 .L0 
     /tmp/ccvstXS3.s:235    .text:0000000000000144 .L0 
     /tmp/ccvstXS3.s:240    .text:000000000000014c .L0 
     /tmp/ccvstXS3.s:241    .text:000000000000014c .L0 
     /tmp/ccvstXS3.s:248    .text:0000000000000158 .L0 
     /tmp/ccvstXS3.s:249    .text:0000000000000158 .L0 
     /tmp/ccvstXS3.s:254    .text:0000000000000168 .L0 
     /tmp/ccvstXS3.s:255    .text:0000000000000168 .L0 
     /tmp/ccvstXS3.s:257    .text:0000000000000170 .L0 
     /tmp/ccvstXS3.s:258    .text:0000000000000170 .L0 
     /tmp/ccvstXS3.s:260    .text:0000000000000174 .L0 
     /tmp/ccvstXS3.s:261    .text:0000000000000174 .L0 
     /tmp/ccvstXS3.s:263    .text:0000000000000178 .L0 
     /tmp/ccvstXS3.s:265    .text:000000000000017c .L0 
     /tmp/ccvstXS3.s:267    .text:0000000000000180 .L0 
     /tmp/ccvstXS3.s:271    .text:0000000000000184 .L0 
     /tmp/ccvstXS3.s:279    .text:0000000000000188 .L0 
     /tmp/ccvstXS3.s:280    .text:0000000000000188 .L0 
     /tmp/ccvstXS3.s:292    .text:00000000000001a0 .L0 
     /tmp/ccvstXS3.s:328    .text:00000000000001a0 .L0 
     /tmp/ccvstXS3.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccvstXS3.s:79     .text:0000000000000040 .L0 
     /tmp/ccvstXS3.s:47     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccvstXS3.s:110    .text:0000000000000068 .L0 
     /tmp/ccvstXS3.s:116    .text:0000000000000078 .L0 
     /tmp/ccvstXS3.s:122    .text:0000000000000088 .L0 
     /tmp/ccvstXS3.s:50     .rodata.str1.8:0000000000000028 .LC2
     /tmp/ccvstXS3.s:129    .text:000000000000009c .L0 
     /tmp/ccvstXS3.s:134    .text:00000000000000ac .L0 
     /tmp/ccvstXS3.s:53     .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccvstXS3.s:249    .text:0000000000000158 .L0 
     /tmp/ccvstXS3.s:184    .text:00000000000000ec .L5
     /tmp/ccvstXS3.s:204    .text:0000000000000110 .L7
     /tmp/ccvstXS3.s:224    .text:0000000000000134 .L8
     /tmp/ccvstXS3.s:244    .text:0000000000000158 .L9
     /tmp/ccvstXS3.s:80     .text:0000000000000048 .LEHB0
     /tmp/ccvstXS3.s:60     .text:0000000000000028 .LFB103
     /tmp/ccvstXS3.s:97     .text:000000000000005c .LEHE0
     /tmp/ccvstXS3.s:100    .text:0000000000000060 .LEHB1
     /tmp/ccvstXS3.s:105    .text:0000000000000068 .LEHE1
     /tmp/ccvstXS3.s:270    .text:0000000000000184 .L10
     /tmp/ccvstXS3.s:111    .text:0000000000000070 .LEHB2
     /tmp/ccvstXS3.s:252    .text:0000000000000168 .LEHE2
GAS LISTING /tmp/ccvstXS3.s 			page 17


     /tmp/ccvstXS3.s:284    .text:0000000000000198 .LEHB3
     /tmp/ccvstXS3.s:287    .text:00000000000001a0 .LEHE3
     /tmp/ccvstXS3.s:2603   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccvstXS3.s:4305   .debug_str:0000000000000e64 .LASF276
     /tmp/ccvstXS3.s:3983   .debug_str:0000000000000426 .LASF277
     /tmp/ccvstXS3.s:4197   .debug_str:0000000000000add .LASF278
     /tmp/ccvstXS3.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccvstXS3.s:319    .text:00000000000001a0 .Letext0
     /tmp/ccvstXS3.s:3843   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccvstXS3.s:4027   .debug_str:0000000000000546 .LASF0
     /tmp/ccvstXS3.s:4071   .debug_str:000000000000069c .LASF1
     /tmp/ccvstXS3.s:4213   .debug_str:0000000000000b8a .LASF2
     /tmp/ccvstXS3.s:4229   .debug_str:0000000000000be9 .LASF4
     /tmp/ccvstXS3.s:4041   .debug_str:00000000000005aa .LASF3
     /tmp/ccvstXS3.s:3865   .debug_str:00000000000000b8 .LASF5
     /tmp/ccvstXS3.s:4179   .debug_str:0000000000000a56 .LASF6
     /tmp/ccvstXS3.s:4167   .debug_str:00000000000009da .LASF7
     /tmp/ccvstXS3.s:4057   .debug_str:000000000000063c .LASF8
     /tmp/ccvstXS3.s:3995   .debug_str:0000000000000461 .LASF9
     /tmp/ccvstXS3.s:4005   .debug_str:000000000000049d .LASF10
     /tmp/ccvstXS3.s:3923   .debug_str:0000000000000292 .LASF11
     /tmp/ccvstXS3.s:3979   .debug_str:000000000000040f .LASF12
     /tmp/ccvstXS3.s:3939   .debug_str:00000000000002e9 .LASF13
     /tmp/ccvstXS3.s:3921   .debug_str:0000000000000282 .LASF14
     /tmp/ccvstXS3.s:4279   .debug_str:0000000000000d96 .LASF15
     /tmp/ccvstXS3.s:3963   .debug_str:0000000000000393 .LASF16
     /tmp/ccvstXS3.s:4259   .debug_str:0000000000000ccd .LASF17
     /tmp/ccvstXS3.s:3941   .debug_str:00000000000002f9 .LASF22
     /tmp/ccvstXS3.s:4403   .debug_str:0000000000001247 .LASF18
     /tmp/ccvstXS3.s:4291   .debug_str:0000000000000dd2 .LASF20
     /tmp/ccvstXS3.s:3911   .debug_str:0000000000000229 .LASF19
     /tmp/ccvstXS3.s:4277   .debug_str:0000000000000d80 .LASF21
     /tmp/ccvstXS3.s:3855   .debug_str:0000000000000043 .LASF82
     /tmp/ccvstXS3.s:4343   .debug_str:0000000000001066 .LASF147
     /tmp/ccvstXS3.s:4257   .debug_str:0000000000000cba .LASF95
     /tmp/ccvstXS3.s:3893   .debug_str:00000000000001b2 .LASF97
     /tmp/ccvstXS3.s:3965   .debug_str:00000000000003a9 .LASF23
     /tmp/ccvstXS3.s:4073   .debug_str:00000000000006af .LASF24
     /tmp/ccvstXS3.s:4065   .debug_str:0000000000000683 .LASF25
     /tmp/ccvstXS3.s:3925   .debug_str:00000000000002a1 .LASF26
     /tmp/ccvstXS3.s:3891   .debug_str:00000000000001ad .LASF27
     /tmp/ccvstXS3.s:4393   .debug_str:00000000000011f6 .LASF279
     /tmp/ccvstXS3.s:4289   .debug_str:0000000000000dcc .LASF28
     /tmp/ccvstXS3.s:3907   .debug_str:0000000000000212 .LASF29
     /tmp/ccvstXS3.s:4095   .debug_str:0000000000000785 .LASF30
     /tmp/ccvstXS3.s:3999   .debug_str:0000000000000487 .LASF31
     /tmp/ccvstXS3.s:4285   .debug_str:0000000000000db9 .LASF258
     /tmp/ccvstXS3.s:3917   .debug_str:0000000000000253 .LASF32
     /tmp/ccvstXS3.s:4309   .debug_str:0000000000000f18 .LASF33
     /tmp/ccvstXS3.s:4147   .debug_str:000000000000095c .LASF280
     /tmp/ccvstXS3.s:4323   .debug_str:0000000000000fb0 .LASF34
     /tmp/ccvstXS3.s:4365   .debug_str:000000000000110b .LASF35
     /tmp/ccvstXS3.s:4241   .debug_str:0000000000000c34 .LASF36
     /tmp/ccvstXS3.s:4053   .debug_str:0000000000000605 .LASF37
     /tmp/ccvstXS3.s:4299   .debug_str:0000000000000e25 .LASF44
     /tmp/ccvstXS3.s:3849   .debug_str:0000000000000021 .LASF46
     /tmp/ccvstXS3.s:4075   .debug_str:00000000000006cd .LASF38
GAS LISTING /tmp/ccvstXS3.s 			page 18


     /tmp/ccvstXS3.s:4315   .debug_str:0000000000000f7b .LASF40
     /tmp/ccvstXS3.s:3951   .debug_str:0000000000000340 .LASF39
     /tmp/ccvstXS3.s:3931   .debug_str:00000000000002c0 .LASF41
     /tmp/ccvstXS3.s:4253   .debug_str:0000000000000ca3 .LASF42
     /tmp/ccvstXS3.s:4051   .debug_str:00000000000005f6 .LASF43
     /tmp/ccvstXS3.s:4217   .debug_str:0000000000000ba4 .LASF45
     /tmp/ccvstXS3.s:3915   .debug_str:000000000000023e .LASF47
     /tmp/ccvstXS3.s:4097   .debug_str:000000000000078d .LASF48
     /tmp/ccvstXS3.s:3997   .debug_str:0000000000000471 .LASF49
     /tmp/ccvstXS3.s:4339   .debug_str:000000000000104f .LASF50
     /tmp/ccvstXS3.s:4243   .debug_str:0000000000000c58 .LASF51
     /tmp/ccvstXS3.s:4195   .debug_str:0000000000000ad4 .LASF52
     /tmp/ccvstXS3.s:4189   .debug_str:0000000000000a92 .LASF53
     /tmp/ccvstXS3.s:4287   .debug_str:0000000000000dc1 .LASF54
     /tmp/ccvstXS3.s:4121   .debug_str:0000000000000862 .LASF55
     /tmp/ccvstXS3.s:3903   .debug_str:00000000000001f6 .LASF56
     /tmp/ccvstXS3.s:4349   .debug_str:00000000000010a7 .LASF57
     /tmp/ccvstXS3.s:4099   .debug_str:0000000000000798 .LASF58
     /tmp/ccvstXS3.s:4115   .debug_str:000000000000082b .LASF59
     /tmp/ccvstXS3.s:4019   .debug_str:000000000000050e .LASF60
     /tmp/ccvstXS3.s:4321   .debug_str:0000000000000f9e .LASF61
     /tmp/ccvstXS3.s:4077   .debug_str:00000000000006d3 .LASF62
     /tmp/ccvstXS3.s:4345   .debug_str:000000000000107d .LASF63
     /tmp/ccvstXS3.s:4381   .debug_str:000000000000117a .LASF64
     /tmp/ccvstXS3.s:4413   .debug_str:0000000000001296 .LASF65
     /tmp/ccvstXS3.s:3949   .debug_str:0000000000000331 .LASF66
     /tmp/ccvstXS3.s:4175   .debug_str:0000000000000a29 .LASF67
     /tmp/ccvstXS3.s:4067   .debug_str:0000000000000688 .LASF68
     /tmp/ccvstXS3.s:3959   .debug_str:000000000000036d .LASF69
     /tmp/ccvstXS3.s:4091   .debug_str:0000000000000764 .LASF70
     /tmp/ccvstXS3.s:4409   .debug_str:000000000000127b .LASF71
     /tmp/ccvstXS3.s:4063   .debug_str:000000000000067c .LASF72
     /tmp/ccvstXS3.s:4187   .debug_str:0000000000000a80 .LASF73
     /tmp/ccvstXS3.s:3905   .debug_str:0000000000000202 .LASF74
     /tmp/ccvstXS3.s:4261   .debug_str:0000000000000ce3 .LASF75
     /tmp/ccvstXS3.s:4415   .debug_str:00000000000012b1 .LASF76
     /tmp/ccvstXS3.s:4087   .debug_str:0000000000000741 .LASF77
     /tmp/ccvstXS3.s:3981   .debug_str:000000000000041e .LASF78
     /tmp/ccvstXS3.s:4269   .debug_str:0000000000000d2b .LASF79
     /tmp/ccvstXS3.s:4031   .debug_str:000000000000055b .LASF154
     /tmp/ccvstXS3.s:4307   .debug_str:0000000000000f10 .LASF281
     /tmp/ccvstXS3.s:4231   .debug_str:0000000000000bf0 .LASF80
     /tmp/ccvstXS3.s:3861   .debug_str:0000000000000094 .LASF81
     /tmp/ccvstXS3.s:4001   .debug_str:000000000000048c .LASF226
     /tmp/ccvstXS3.s:4251   .debug_str:0000000000000c8c .LASF253
     /tmp/ccvstXS3.s:3853   .debug_str:000000000000003e .LASF83
     /tmp/ccvstXS3.s:4399   .debug_str:000000000000122a .LASF84
     /tmp/ccvstXS3.s:4363   .debug_str:00000000000010ff .LASF85
     /tmp/ccvstXS3.s:3945   .debug_str:0000000000000314 .LASF86
     /tmp/ccvstXS3.s:4111   .debug_str:00000000000007fa .LASF87
     /tmp/ccvstXS3.s:4325   .debug_str:0000000000000fd8 .LASF88
     /tmp/ccvstXS3.s:4319   .debug_str:0000000000000f94 .LASF89
     /tmp/ccvstXS3.s:4351   .debug_str:00000000000010be .LASF90
     /tmp/ccvstXS3.s:4227   .debug_str:0000000000000bdb .LASF91
     /tmp/ccvstXS3.s:4205   .debug_str:0000000000000b67 .LASF92
     /tmp/ccvstXS3.s:4223   .debug_str:0000000000000bcf .LASF93
     /tmp/ccvstXS3.s:3973   .debug_str:00000000000003f6 .LASF94
GAS LISTING /tmp/ccvstXS3.s 			page 19


     /tmp/ccvstXS3.s:3909   .debug_str:000000000000021b .LASF208
     /tmp/ccvstXS3.s:4079   .debug_str:00000000000006e0 .LASF210
     /tmp/ccvstXS3.s:3943   .debug_str:0000000000000306 .LASF96
     /tmp/ccvstXS3.s:3859   .debug_str:000000000000006c .LASF98
     /tmp/ccvstXS3.s:4239   .debug_str:0000000000000c23 .LASF222
     /tmp/ccvstXS3.s:4135   .debug_str:00000000000008e0 .LASF99
     /tmp/ccvstXS3.s:4137   .debug_str:00000000000008eb .LASF282
     /tmp/ccvstXS3.s:4317   .debug_str:0000000000000f8b .LASF100
     /tmp/ccvstXS3.s:3869   .debug_str:00000000000000da .LASF101
     /tmp/ccvstXS3.s:4207   .debug_str:0000000000000b6d .LASF102
     /tmp/ccvstXS3.s:4141   .debug_str:0000000000000914 .LASF103
     /tmp/ccvstXS3.s:4089   .debug_str:000000000000075c .LASF104
     /tmp/ccvstXS3.s:4113   .debug_str:0000000000000805 .LASF105
     /tmp/ccvstXS3.s:4157   .debug_str:0000000000000995 .LASF106
     /tmp/ccvstXS3.s:4049   .debug_str:00000000000005d7 .LASF107
     /tmp/ccvstXS3.s:4155   .debug_str:000000000000098c .LASF108
     /tmp/ccvstXS3.s:3867   .debug_str:00000000000000bf .LASF109
     /tmp/ccvstXS3.s:4245   .debug_str:0000000000000c6b .LASF110
     /tmp/ccvstXS3.s:4173   .debug_str:0000000000000a0b .LASF111
     /tmp/ccvstXS3.s:4417   .debug_str:00000000000012c0 .LASF112
     /tmp/ccvstXS3.s:4059   .debug_str:000000000000064f .LASF113
     /tmp/ccvstXS3.s:4225   .debug_str:0000000000000bd4 .LASF114
     /tmp/ccvstXS3.s:4275   .debug_str:0000000000000d67 .LASF115
     /tmp/ccvstXS3.s:3927   .debug_str:00000000000002a6 .LASF116
     /tmp/ccvstXS3.s:4395   .debug_str:00000000000011fd .LASF117
     /tmp/ccvstXS3.s:3889   .debug_str:00000000000001a6 .LASF118
     /tmp/ccvstXS3.s:4143   .debug_str:000000000000093b .LASF119
     /tmp/ccvstXS3.s:4411   .debug_str:000000000000128f .LASF120
     /tmp/ccvstXS3.s:4311   .debug_str:0000000000000f3e .LASF121
     /tmp/ccvstXS3.s:4029   .debug_str:0000000000000553 .LASF122
     /tmp/ccvstXS3.s:4387   .debug_str:00000000000011bb .LASF123
     /tmp/ccvstXS3.s:3957   .debug_str:0000000000000365 .LASF124
     /tmp/ccvstXS3.s:4081   .debug_str:00000000000006f9 .LASF125
     /tmp/ccvstXS3.s:3975   .debug_str:0000000000000402 .LASF126
     /tmp/ccvstXS3.s:4085   .debug_str:0000000000000727 .LASF127
     /tmp/ccvstXS3.s:4151   .debug_str:0000000000000972 .LASF128
     /tmp/ccvstXS3.s:4405   .debug_str:0000000000001254 .LASF129
     /tmp/ccvstXS3.s:4353   .debug_str:00000000000010c5 .LASF130
     /tmp/ccvstXS3.s:4123   .debug_str:0000000000000879 .LASF131
     /tmp/ccvstXS3.s:4117   .debug_str:000000000000083d .LASF132
     /tmp/ccvstXS3.s:4303   .debug_str:0000000000000e34 .LASF133
     /tmp/ccvstXS3.s:4159   .debug_str:00000000000009a1 .LASF134
     /tmp/ccvstXS3.s:4083   .debug_str:0000000000000713 .LASF135
     /tmp/ccvstXS3.s:3977   .debug_str:000000000000040a .LASF136
     /tmp/ccvstXS3.s:4127   .debug_str:00000000000008b0 .LASF137
     /tmp/ccvstXS3.s:4039   .debug_str:00000000000005a5 .LASF138
     /tmp/ccvstXS3.s:4069   .debug_str:0000000000000697 .LASF139
     /tmp/ccvstXS3.s:4199   .debug_str:0000000000000b3e .LASF140
     /tmp/ccvstXS3.s:4101   .debug_str:000000000000079f .LASF244
     /tmp/ccvstXS3.s:4359   .debug_str:00000000000010e7 .LASF141
     /tmp/ccvstXS3.s:4037   .debug_str:0000000000000593 .LASF142
     /tmp/ccvstXS3.s:4131   .debug_str:00000000000008bc .LASF143
     /tmp/ccvstXS3.s:4347   .debug_str:0000000000001096 .LASF144
     /tmp/ccvstXS3.s:4297   .debug_str:0000000000000e07 .LASF145
     /tmp/ccvstXS3.s:4013   .debug_str:00000000000004dc .LASF146
     /tmp/ccvstXS3.s:4093   .debug_str:000000000000076d .LASF148
     /tmp/ccvstXS3.s:4341   .debug_str:0000000000001057 .LASF149
GAS LISTING /tmp/ccvstXS3.s 			page 20


     /tmp/ccvstXS3.s:3919   .debug_str:0000000000000266 .LASF150
     /tmp/ccvstXS3.s:4293   .debug_str:0000000000000de8 .LASF151
     /tmp/ccvstXS3.s:4383   .debug_str:0000000000001189 .LASF152
     /tmp/ccvstXS3.s:4201   .debug_str:0000000000000b43 .LASF153
     /tmp/ccvstXS3.s:4331   .debug_str:0000000000001007 .LASF155
     /tmp/ccvstXS3.s:3897   .debug_str:00000000000001e1 .LASF156
     /tmp/ccvstXS3.s:3953   .debug_str:0000000000000349 .LASF157
     /tmp/ccvstXS3.s:4379   .debug_str:0000000000001174 .LASF158
     /tmp/ccvstXS3.s:4361   .debug_str:00000000000010ed .LASF159
     /tmp/ccvstXS3.s:4003   .debug_str:0000000000000498 .LASF160
     /tmp/ccvstXS3.s:4165   .debug_str:00000000000009c9 .LASF161
     /tmp/ccvstXS3.s:4133   .debug_str:00000000000008db .LASF162
     /tmp/ccvstXS3.s:4149   .debug_str:0000000000000961 .LASF163
     /tmp/ccvstXS3.s:4045   .debug_str:00000000000005cd .LASF164
     /tmp/ccvstXS3.s:4105   .debug_str:00000000000007c6 .LASF165
     /tmp/ccvstXS3.s:4367   .debug_str:000000000000111c .LASF166
     /tmp/ccvstXS3.s:4043   .debug_str:00000000000005bc .LASF167
     /tmp/ccvstXS3.s:4047   .debug_str:00000000000005d2 .LASF168
     /tmp/ccvstXS3.s:4161   .debug_str:00000000000009ad .LASF169
     /tmp/ccvstXS3.s:4369   .debug_str:0000000000001121 .LASF170
     /tmp/ccvstXS3.s:3947   .debug_str:0000000000000320 .LASF171
     /tmp/ccvstXS3.s:3901   .debug_str:00000000000001f1 .LASF172
     /tmp/ccvstXS3.s:4055   .debug_str:000000000000062b .LASF173
     /tmp/ccvstXS3.s:4337   .debug_str:0000000000001046 .LASF174
     /tmp/ccvstXS3.s:4327   .debug_str:0000000000000fe0 .LASF175
     /tmp/ccvstXS3.s:4209   .debug_str:0000000000000b76 .LASF176
     /tmp/ccvstXS3.s:4139   .debug_str:00000000000008ff .LASF177
     /tmp/ccvstXS3.s:4185   .debug_str:0000000000000a79 .LASF178
     /tmp/ccvstXS3.s:4177   .debug_str:0000000000000a43 .LASF179
     /tmp/ccvstXS3.s:4129   .debug_str:00000000000008b5 .LASF180
     /tmp/ccvstXS3.s:4061   .debug_str:0000000000000669 .LASF181
     /tmp/ccvstXS3.s:4377   .debug_str:000000000000116c .LASF182
     /tmp/ccvstXS3.s:4233   .debug_str:0000000000000bf5 .LASF183
     /tmp/ccvstXS3.s:4125   .debug_str:00000000000008a8 .LASF184
     /tmp/ccvstXS3.s:3985   .debug_str:0000000000000433 .LASF185
     /tmp/ccvstXS3.s:4145   .debug_str:0000000000000954 .LASF186
     /tmp/ccvstXS3.s:4193   .debug_str:0000000000000ac0 .LASF187
     /tmp/ccvstXS3.s:4263   .debug_str:0000000000000cff .LASF188
     /tmp/ccvstXS3.s:4035   .debug_str:000000000000057f .LASF189
     /tmp/ccvstXS3.s:4273   .debug_str:0000000000000d60 .LASF190
     /tmp/ccvstXS3.s:4235   .debug_str:0000000000000c09 .LASF191
     /tmp/ccvstXS3.s:4237   .debug_str:0000000000000c1c .LASF192
     /tmp/ccvstXS3.s:3929   .debug_str:00000000000002ad .LASF193
     /tmp/ccvstXS3.s:3933   .debug_str:00000000000002d3 .LASF194
     /tmp/ccvstXS3.s:4023   .debug_str:000000000000052e .LASF195
     /tmp/ccvstXS3.s:4033   .debug_str:0000000000000579 .LASF196
     /tmp/ccvstXS3.s:4009   .debug_str:00000000000004b6 .LASF197
     /tmp/ccvstXS3.s:3845   .debug_str:0000000000000000 .LASF198
     /tmp/ccvstXS3.s:4219   .debug_str:0000000000000bae .LASF199
     /tmp/ccvstXS3.s:4211   .debug_str:0000000000000b7f .LASF200
     /tmp/ccvstXS3.s:4401   .debug_str:000000000000122f .LASF201
     /tmp/ccvstXS3.s:4301   .debug_str:0000000000000e2a .LASF202
     /tmp/ccvstXS3.s:4385   .debug_str:00000000000011a5 .LASF203
     /tmp/ccvstXS3.s:4355   .debug_str:00000000000010d5 .LASF204
     /tmp/ccvstXS3.s:4107   .debug_str:00000000000007d7 .LASF205
     /tmp/ccvstXS3.s:4373   .debug_str:000000000000113e .LASF206
     /tmp/ccvstXS3.s:3881   .debug_str:000000000000015a .LASF207
GAS LISTING /tmp/ccvstXS3.s 			page 21


     /tmp/ccvstXS3.s:4169   .debug_str:00000000000009ed .LASF209
     /tmp/ccvstXS3.s:3967   .debug_str:00000000000003b4 .LASF211
     /tmp/ccvstXS3.s:3875   .debug_str:0000000000000122 .LASF212
     /tmp/ccvstXS3.s:4025   .debug_str:0000000000000540 .LASF213
     /tmp/ccvstXS3.s:4103   .debug_str:00000000000007a5 .LASF214
     /tmp/ccvstXS3.s:3971   .debug_str:00000000000003f1 .LASF215
     /tmp/ccvstXS3.s:3969   .debug_str:00000000000003d6 .LASF216
     /tmp/ccvstXS3.s:3961   .debug_str:0000000000000387 .LASF217
     /tmp/ccvstXS3.s:4271   .debug_str:0000000000000d3d .LASF218
     /tmp/ccvstXS3.s:4153   .debug_str:000000000000097c .LASF219
     /tmp/ccvstXS3.s:4371   .debug_str:0000000000001126 .LASF220
     /tmp/ccvstXS3.s:3863   .debug_str:00000000000000a0 .LASF221
     /tmp/ccvstXS3.s:4221   .debug_str:0000000000000bc6 .LASF223
     /tmp/ccvstXS3.s:4255   .debug_str:0000000000000ca8 .LASF224
     /tmp/ccvstXS3.s:3993   .debug_str:0000000000000457 .LASF225
     /tmp/ccvstXS3.s:4397   .debug_str:0000000000001216 .LASF283
     /tmp/ccvstXS3.s:4021   .debug_str:0000000000000516 .LASF227
     /tmp/ccvstXS3.s:4335   .debug_str:0000000000001029 .LASF228
     /tmp/ccvstXS3.s:3955   .debug_str:000000000000035a .LASF229
     /tmp/ccvstXS3.s:4329   .debug_str:0000000000000ff5 .LASF230
     /tmp/ccvstXS3.s:4389   .debug_str:00000000000011d5 .LASF231
     /tmp/ccvstXS3.s:4249   .debug_str:0000000000000c7b .LASF232
     /tmp/ccvstXS3.s:4295   .debug_str:0000000000000df7 .LASF233
     /tmp/ccvstXS3.s:4313   .debug_str:0000000000000f57 .LASF234
     /tmp/ccvstXS3.s:4203   .debug_str:0000000000000b48 .LASF235
     /tmp/ccvstXS3.s:4281   .debug_str:0000000000000da2 .LASF236
     /tmp/ccvstXS3.s:3871   .debug_str:00000000000000f6 .LASF237
     /tmp/ccvstXS3.s:4333   .debug_str:0000000000001018 .LASF238
     /tmp/ccvstXS3.s:3879   .debug_str:0000000000000141 .LASF239
     /tmp/ccvstXS3.s:3887   .debug_str:000000000000018d .LASF240
     /tmp/ccvstXS3.s:4191   .debug_str:0000000000000aa5 .LASF284
     /tmp/ccvstXS3.s:4283   .debug_str:0000000000000da9 .LASF241
     /tmp/ccvstXS3.s:4183   .debug_str:0000000000000a69 .LASF242
     /tmp/ccvstXS3.s:3851   .debug_str:0000000000000030 .LASF243
     /tmp/ccvstXS3.s:4267   .debug_str:0000000000000d1b .LASF245
     /tmp/ccvstXS3.s:4163   .debug_str:00000000000009be .LASF246
     /tmp/ccvstXS3.s:3873   .debug_str:0000000000000114 .LASF247
     /tmp/ccvstXS3.s:4015   .debug_str:00000000000004e7 .LASF248
     /tmp/ccvstXS3.s:4375   .debug_str:000000000000114d .LASF249
     /tmp/ccvstXS3.s:4181   .debug_str:0000000000000a5d .LASF250
     /tmp/ccvstXS3.s:4265   .debug_str:0000000000000d07 .LASF251
     /tmp/ccvstXS3.s:4011   .debug_str:00000000000004c8 .LASF252
     /tmp/ccvstXS3.s:3847   .debug_str:000000000000000b .LASF254
     /tmp/ccvstXS3.s:3899   .debug_str:00000000000001e6 .LASF255
     /tmp/ccvstXS3.s:3989   .debug_str:000000000000044c .LASF256
     /tmp/ccvstXS3.s:293    .text:00000000000001a0 .LFE103
     /tmp/ccvstXS3.s:3755   .debug_loc:0000000000000000 .LLST1
     /tmp/ccvstXS3.s:4017   .debug_str:0000000000000508 .LASF257
     /tmp/ccvstXS3.s:3762   .debug_loc:0000000000000023 .LLST2
     /tmp/ccvstXS3.s:3877   .debug_str:0000000000000131 .LASF259
     /tmp/ccvstXS3.s:3935   .debug_str:00000000000002d9 .LASF260
     /tmp/ccvstXS3.s:4007   .debug_str:00000000000004ab .LASF261
     /tmp/ccvstXS3.s:3883   .debug_str:0000000000000176 .LASF262
     /tmp/ccvstXS3.s:3857   .debug_str:0000000000000053 .LASF264
     /tmp/ccvstXS3.s:3987   .debug_str:0000000000000447 .LASF263
     /tmp/ccvstXS3.s:4247   .debug_str:0000000000000c76 .LASF265
     /tmp/ccvstXS3.s:9      .text:0000000000000000 .LFB105
GAS LISTING /tmp/ccvstXS3.s 			page 22


     /tmp/ccvstXS3.s:40     .text:0000000000000028 .LFE105
     /tmp/ccvstXS3.s:22     .text:0000000000000010 .LBB22
     /tmp/ccvstXS3.s:29     .text:0000000000000018 .LBE22
     /tmp/ccvstXS3.s:3769   .debug_loc:0000000000000046 .LLST0
     /tmp/ccvstXS3.s:27     .text:0000000000000018 .LVL1
     /tmp/ccvstXS3.s:84     .text:0000000000000050 .LBB43
     /tmp/ccvstXS3.s:3835   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccvstXS3.s:88     .text:0000000000000050 .LBB45
     /tmp/ccvstXS3.s:102    .text:0000000000000060 .LBE45
     /tmp/ccvstXS3.s:3779   .debug_loc:000000000000006c .LLST3
     /tmp/ccvstXS3.s:96     .text:000000000000005c .LVL3
     /tmp/ccvstXS3.s:276    .text:0000000000000188 .LBB47
     /tmp/ccvstXS3.s:289    .text:00000000000001a0 .LBE47
     /tmp/ccvstXS3.s:3787   .debug_loc:0000000000000090 .LLST4
     /tmp/ccvstXS3.s:282    .text:0000000000000194 .LVL30
     /tmp/ccvstXS3.s:104    .text:0000000000000068 .LVL5
     /tmp/ccvstXS3.s:136    .text:00000000000000b4 .LBB50
     /tmp/ccvstXS3.s:148    .text:00000000000000b8 .LBE50
     /tmp/ccvstXS3.s:155    .text:00000000000000c4 .LBB52
     /tmp/ccvstXS3.s:165    .text:00000000000000c8 .LBE52
     /tmp/ccvstXS3.s:177    .text:00000000000000e0 .LBB54
     /tmp/ccvstXS3.s:186    .text:00000000000000ec .LBE54
     /tmp/ccvstXS3.s:3794   .debug_loc:00000000000000b3 .LLST5
     /tmp/ccvstXS3.s:183    .text:00000000000000ec .LVL17
     /tmp/ccvstXS3.s:197    .text:0000000000000104 .LBB56
     /tmp/ccvstXS3.s:206    .text:0000000000000110 .LBE56
     /tmp/ccvstXS3.s:3801   .debug_loc:00000000000000d6 .LLST6
     /tmp/ccvstXS3.s:203    .text:0000000000000110 .LVL20
     /tmp/ccvstXS3.s:217    .text:0000000000000128 .LBB58
     /tmp/ccvstXS3.s:226    .text:0000000000000134 .LBE58
     /tmp/ccvstXS3.s:3808   .debug_loc:00000000000000f9 .LLST7
     /tmp/ccvstXS3.s:223    .text:0000000000000134 .LVL23
     /tmp/ccvstXS3.s:237    .text:000000000000014c .LBB60
     /tmp/ccvstXS3.s:246    .text:0000000000000158 .LBE60
     /tmp/ccvstXS3.s:3815   .debug_loc:000000000000011c .LLST8
     /tmp/ccvstXS3.s:243    .text:0000000000000158 .LVL26
     /tmp/ccvstXS3.s:82     .text:0000000000000050 .LVL2
     /tmp/ccvstXS3.s:113    .text:0000000000000078 .LVL6
     /tmp/ccvstXS3.s:124    .text:0000000000000098 .LVL8
     /tmp/ccvstXS3.s:131    .text:00000000000000ac .LVL10
     /tmp/ccvstXS3.s:153    .text:00000000000000c4 .LVL13
     /tmp/ccvstXS3.s:169    .text:00000000000000d0 .LVL14
     /tmp/ccvstXS3.s:176    .text:00000000000000e0 .LVL16
     /tmp/ccvstXS3.s:190    .text:00000000000000f4 .LVL18
     /tmp/ccvstXS3.s:196    .text:0000000000000104 .LVL19
     /tmp/ccvstXS3.s:210    .text:0000000000000118 .LVL21
     /tmp/ccvstXS3.s:216    .text:0000000000000128 .LVL22
     /tmp/ccvstXS3.s:230    .text:000000000000013c .LVL24
     /tmp/ccvstXS3.s:236    .text:000000000000014c .LVL25
     /tmp/ccvstXS3.s:251    .text:0000000000000168 .LVL27
     /tmp/ccvstXS3.s:286    .text:00000000000001a0 .LVL31
     /tmp/ccvstXS3.s:3991   .debug_str:0000000000000451 .LASF266
     /tmp/ccvstXS3.s:3913   .debug_str:0000000000000239 .LASF267
     /tmp/ccvstXS3.s:4109   .debug_str:00000000000007ed .LASF268
     /tmp/ccvstXS3.s:4171   .debug_str:0000000000000a02 .LASF270
     /tmp/ccvstXS3.s:4215   .debug_str:0000000000000b98 .LASF269
     /tmp/ccvstXS3.s:4357   .debug_str:00000000000010df .LASF271
GAS LISTING /tmp/ccvstXS3.s 			page 23


     /tmp/ccvstXS3.s:4407   .debug_str:0000000000001270 .LASF272
     /tmp/ccvstXS3.s:3937   .debug_str:00000000000002e3 .LASF273
     /tmp/ccvstXS3.s:4119   .debug_str:000000000000084e .LASF274
     /tmp/ccvstXS3.s:3885   .debug_str:0000000000000180 .LASF275
     /tmp/ccvstXS3.s:4391   .debug_str:00000000000011e7 .LASF285
     /tmp/ccvstXS3.s:3895   .debug_str:00000000000001c9 .LASF286
     /tmp/ccvstXS3.s:126    .text:000000000000009c .LVL9
     /tmp/ccvstXS3.s:171    .text:00000000000000d4 .LVL15
     /tmp/ccvstXS3.s:21     .text:0000000000000010 .LVL0
     /tmp/ccvstXS3.s:99     .text:0000000000000060 .LVL4
     /tmp/ccvstXS3.s:273    .text:0000000000000188 .LVL29
     /tmp/ccvstXS3.s:329    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccvstXS3.s:107    .text:0000000000000068 .LBE43
     /tmp/ccvstXS3.s:274    .text:0000000000000188 .LBB62
     /tmp/ccvstXS3.s:291    .text:00000000000001a0 .LBE62
     /tmp/ccvstXS3.s:296    .gcc_except_table:0000000000000000 .LLSDA103

UNDEFINED SYMBOLS
_Z8userMainv
_Z12kprintStringPKc
_Z7kmallocm
_ZN3TCBC1Ev
_ZN3TCB7runningE
_ZN3TCB16createUserThreadEPFvPvES0_
_ZN5Riscv14supervisorTrapEv
_ZN3TCB4joinEv
_ZN15ThreadCollector11getInstanceEv
_ZN15ThreadCollectorD1Ev
_Z5kfreePv
_ZN10IdleThread11getInstanceEv
_ZN10IdleThreadD1Ev
_ZN14TimerInterrupt11getInstanceEv
_ZN14TimerInterruptD1Ev
_ZN9Scheduler11getInstanceEv
_ZN9SchedulerD1Ev
_Unwind_Resume
__gxx_personality_v0
