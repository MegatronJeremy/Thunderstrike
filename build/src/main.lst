GAS LISTING /tmp/ccaUBWIq.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_ZZ4mainENUlPvE_4_FUNES_:
   9              	.LFB95:
  10              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/TCB.h"
   2:src/main.cpp  **** #include "../h/Riscv.h"
   3:src/main.cpp  **** #include "../h/TimerInterrupt.h"
   4:src/main.cpp  **** #include "../h/SysPrint.h"
   5:src/main.cpp  **** #include "../h/Scheduler.h"
   6:src/main.cpp  **** #include "../h/ThreadCollector.h"
   7:src/main.cpp  **** #include "../h/IdleThread.h"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** extern void userMain();
  10:src/main.cpp  **** 
  11:src/main.cpp  **** int main() {
  12:src/main.cpp  ****     kprintString("Starting main\n");
  13:src/main.cpp  ****     TCB *main = TCB::createThread(nullptr, nullptr);
  14:src/main.cpp  ****     kprintString("Created main thread\n");
  15:src/main.cpp  ****     TCB::running = main;
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     TCB *uMain = TCB::createThread([](void *){userMain();}, nullptr);
  11              		.loc 1 17 36
  12              		.cfi_startproc
  13 0000 130101FF 		addi	sp,sp,-16
  14              		.cfi_def_cfa_offset 16
  15 0004 23341100 		sd	ra,8(sp)
  16 0008 23308100 		sd	s0,0(sp)
  17              		.cfi_offset 1, -8
  18              		.cfi_offset 8, -16
  19 000c 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LVL0:
  22              	.LBB20:
  23              	.LBB21:
  24              		.loc 1 17 47
  25              		.loc 1 17 55 is_stmt 0
  26 0010 97000000 		call	_Z8userMainv@plt
  26      E7800000 
  27              	.LVL1:
  28              	.LBE21:
  29              	.LBE20:
  30              		.loc 1 17 58
  31 0018 83308100 		ld	ra,8(sp)
  32              		.cfi_restore 1
  33 001c 03340100 		ld	s0,0(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0020 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 0024 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE95:
GAS LISTING /tmp/ccaUBWIq.s 			page 2


  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 53746172 		.string	"Starting main\n"
  45      74696E67 
  45      206D6169 
  45      6E0A00
  46 000f 00       		.align	3
  47              	.LC1:
  48 0010 43726561 		.string	"Created main thread\n"
  48      74656420 
  48      6D61696E 
  48      20746872 
  48      6561640A 
  49 0025 000000   		.align	3
  50              	.LC2:
  51 0028 43726561 		.string	"Created user main thread\n"
  51      74656420 
  51      75736572 
  51      206D6169 
  51      6E207468 
  52 0042 00000000 		.align	3
  52      0000
  53              	.LC3:
  54 0048 4D61696E 		.string	"Main finished\n"
  54      2066696E 
  54      69736865 
  54      640A00
  55              		.text
  56              		.align	2
  57              		.globl	main
  59              	main:
  60              	.LFB93:
  11:src/main.cpp  ****     kprintString("Starting main\n");
  61              		.loc 1 11 12 is_stmt 1
  62              		.cfi_startproc
  63 0028 130101FE 		addi	sp,sp,-32
  64              		.cfi_def_cfa_offset 32
  65 002c 233C1100 		sd	ra,24(sp)
  66 0030 23388100 		sd	s0,16(sp)
  67 0034 23349100 		sd	s1,8(sp)
  68 0038 23302101 		sd	s2,0(sp)
  69              		.cfi_offset 1, -8
  70              		.cfi_offset 8, -16
  71              		.cfi_offset 9, -24
  72              		.cfi_offset 18, -32
  73 003c 13040102 		addi	s0,sp,32
  74              		.cfi_def_cfa 8, 0
  12:src/main.cpp  ****     TCB *main = TCB::createThread(nullptr, nullptr);
  75              		.loc 1 12 5
  12:src/main.cpp  ****     TCB *main = TCB::createThread(nullptr, nullptr);
  76              		.loc 1 12 17 is_stmt 0
  77 0040 17050000 		lla	a0,.LC0
  77      13050500 
  78 0048 97000000 		call	_Z12kprintStringPKc@plt
  78      E7800000 
  79              	.LVL2:
GAS LISTING /tmp/ccaUBWIq.s 			page 3


  13:src/main.cpp  ****     kprintString("Created main thread\n");
  80              		.loc 1 13 5 is_stmt 1
  13:src/main.cpp  ****     kprintString("Created main thread\n");
  81              		.loc 1 13 34 is_stmt 0
  82 0050 93050000 		li	a1,0
  83 0054 13050000 		li	a0,0
  84 0058 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
  84      E7800000 
  85              	.LVL3:
  86 0060 93040500 		mv	s1,a0
  87              	.LVL4:
  14:src/main.cpp  ****     TCB::running = main;
  88              		.loc 1 14 5 is_stmt 1
  14:src/main.cpp  ****     TCB::running = main;
  89              		.loc 1 14 17 is_stmt 0
  90 0064 17050000 		lla	a0,.LC1
  90      13050500 
  91 006c 97000000 		call	_Z12kprintStringPKc@plt
  91      E7800000 
  92              	.LVL5:
  15:src/main.cpp  **** 
  93              		.loc 1 15 5 is_stmt 1
  15:src/main.cpp  **** 
  94              		.loc 1 15 18 is_stmt 0
  95 0074 97070000 		la	a5,_ZN3TCB7runningE
  95      83B70700 
  96 007c 23B09700 		sd	s1,0(a5)
  97              		.loc 1 17 5 is_stmt 1
  98              	.LVL6:
  99              		.loc 1 17 35 is_stmt 0
 100 0080 93050000 		li	a1,0
 101 0084 17050000 		lla	a0,_ZZ4mainENUlPvE_4_FUNES_
 101      13050500 
 102 008c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
 102      E7800000 
 103              	.LVL7:
 104 0094 93040500 		mv	s1,a0
 105              	.LVL8:
  18:src/main.cpp  ****     kprintString("Created user main thread\n");
 106              		.loc 1 18 5 is_stmt 1
 107              		.loc 1 18 17 is_stmt 0
 108 0098 17050000 		lla	a0,.LC2
 108      13050500 
 109 00a0 97000000 		call	_Z12kprintStringPKc@plt
 109      E7800000 
 110              	.LVL9:
  19:src/main.cpp  **** 
  20:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 111              		.loc 1 20 5 is_stmt 1
 112              		.loc 1 20 19 is_stmt 0
 113 00a8 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 113      83B70700 
 114              	.LVL10:
 115              	.LBB22:
 116              	.LBB23:
 117              		.file 2 "src/../h/Riscv.h"
   1:src/../h/Riscv.h **** //
GAS LISTING /tmp/ccaUBWIq.s 			page 4


   2:src/../h/Riscv.h **** // Created by xparh on 4/24/2022.
   3:src/../h/Riscv.h **** //
   4:src/../h/Riscv.h **** 
   5:src/../h/Riscv.h **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_H
   6:src/../h/Riscv.h **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_H
   7:src/../h/Riscv.h **** 
   8:src/../h/Riscv.h **** #include "../lib/hw.h"
   9:src/../h/Riscv.h **** 
  10:src/../h/Riscv.h **** #define lock()                  \
  11:src/../h/Riscv.h ****     volatile uint64 sstatus = Riscv::r_sstatus(); \
  12:src/../h/Riscv.h ****     Riscv::disableInterrupts(); \
  13:src/../h/Riscv.h **** 
  14:src/../h/Riscv.h **** #define unlock()                \
  15:src/../h/Riscv.h ****     Riscv::w_sstatus(sstatus);  \
  16:src/../h/Riscv.h **** 
  17:src/../h/Riscv.h **** 
  18:src/../h/Riscv.h **** class Riscv {
  19:src/../h/Riscv.h **** public:
  20:src/../h/Riscv.h **** 
  21:src/../h/Riscv.h ****     // disables interrupts
  22:src/../h/Riscv.h ****     static void disableInterrupts();
  23:src/../h/Riscv.h **** 
  24:src/../h/Riscv.h ****     // enables interrupts
  25:src/../h/Riscv.h ****     static void enableInterrupts();
  26:src/../h/Riscv.h **** 
  27:src/../h/Riscv.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  28:src/../h/Riscv.h ****     static void popSppSpie(bool prMode);
  29:src/../h/Riscv.h **** 
  30:src/../h/Riscv.h ****     // push x3..x31 registers on stack
  31:src/../h/Riscv.h **** //    static void pushRegisters();
  32:src/../h/Riscv.h **** 
  33:src/../h/Riscv.h ****     // pop x3..x31 registers on stack
  34:src/../h/Riscv.h **** //    static void popRegisters();
  35:src/../h/Riscv.h **** 
  36:src/../h/Riscv.h ****     // push a0 on saved contex
  37:src/../h/Riscv.h ****     static void pushRegisterA0(uint64 context);
  38:src/../h/Riscv.h **** 
  39:src/../h/Riscv.h ****     // push a1 on saved contex
  40:src/../h/Riscv.h ****     static void pushRegisterA1(uint64 context);
  41:src/../h/Riscv.h **** 
  42:src/../h/Riscv.h ****     // read register sp
  43:src/../h/Riscv.h ****     static uint64 r_sp();
  44:src/../h/Riscv.h **** 
  45:src/../h/Riscv.h ****     // write register sp
  46:src/../h/Riscv.h ****     static void w_sp(uint64 sp);
  47:src/../h/Riscv.h **** 
  48:src/../h/Riscv.h ****     // read old frame pointer
  49:src/../h/Riscv.h ****     static uint64 r_ps0();
  50:src/../h/Riscv.h **** 
  51:src/../h/Riscv.h ****     // read frame pointer
  52:src/../h/Riscv.h ****     static uint64 r_s0();
  53:src/../h/Riscv.h **** 
  54:src/../h/Riscv.h ****     // read register a0
  55:src/../h/Riscv.h ****     static uint64 r_a0();
  56:src/../h/Riscv.h **** 
  57:src/../h/Riscv.h ****     // write register a0
  58:src/../h/Riscv.h ****     static void w_a0(uint64 a0);
GAS LISTING /tmp/ccaUBWIq.s 			page 5


  59:src/../h/Riscv.h **** 
  60:src/../h/Riscv.h ****     // read register a1
  61:src/../h/Riscv.h ****     static uint64 r_a1();
  62:src/../h/Riscv.h **** 
  63:src/../h/Riscv.h ****     // write register a1
  64:src/../h/Riscv.h ****     static void w_a1(uint64 a1);
  65:src/../h/Riscv.h **** 
  66:src/../h/Riscv.h ****     // read register a2
  67:src/../h/Riscv.h ****     static uint64 r_a2();
  68:src/../h/Riscv.h **** 
  69:src/../h/Riscv.h ****     // write register a2
  70:src/../h/Riscv.h ****     static void w_a2(uint64 a2);
  71:src/../h/Riscv.h **** 
  72:src/../h/Riscv.h ****     // read register scause
  73:src/../h/Riscv.h ****     static uint64 r_scause();
  74:src/../h/Riscv.h **** 
  75:src/../h/Riscv.h ****     // write register scause
  76:src/../h/Riscv.h ****     static void w_scause(uint64 scause);
  77:src/../h/Riscv.h **** 
  78:src/../h/Riscv.h ****     // read register sepc
  79:src/../h/Riscv.h ****     static uint64 r_sepc();
  80:src/../h/Riscv.h **** 
  81:src/../h/Riscv.h ****     // write register sepc
  82:src/../h/Riscv.h ****     static void w_sepc(uint64 sepc);
  83:src/../h/Riscv.h **** 
  84:src/../h/Riscv.h ****     // read register stvec
  85:src/../h/Riscv.h ****     static uint64 r_stvec();
  86:src/../h/Riscv.h **** 
  87:src/../h/Riscv.h ****     // write register stvec
  88:src/../h/Riscv.h ****     static void w_stvec(uint64 stvec);
  89:src/../h/Riscv.h **** 
  90:src/../h/Riscv.h ****     // read register stval
  91:src/../h/Riscv.h ****     static uint64 r_stval();
  92:src/../h/Riscv.h **** 
  93:src/../h/Riscv.h ****     // write register stval
  94:src/../h/Riscv.h ****     static void w_stval(uint64 stval);
  95:src/../h/Riscv.h **** 
  96:src/../h/Riscv.h ****     enum BitMaskSip {
  97:src/../h/Riscv.h ****         SIP_SSIP = (1 << 1),
  98:src/../h/Riscv.h ****         SIP_STIP = (1 << 5),
  99:src/../h/Riscv.h ****         SIP_SEIP = (1 << 9)
 100:src/../h/Riscv.h ****     };
 101:src/../h/Riscv.h **** 
 102:src/../h/Riscv.h ****     // mask set register sip
 103:src/../h/Riscv.h ****     static void ms_sip(uint64 mask);
 104:src/../h/Riscv.h **** 
 105:src/../h/Riscv.h ****     // mask clear register sip
 106:src/../h/Riscv.h ****     static void mc_sip(uint64 mask);
 107:src/../h/Riscv.h **** 
 108:src/../h/Riscv.h ****     // read register sip
 109:src/../h/Riscv.h ****     static uint64 r_sip();
 110:src/../h/Riscv.h **** 
 111:src/../h/Riscv.h ****     // write register sip
 112:src/../h/Riscv.h ****     static void w_sip(uint64 sip);
 113:src/../h/Riscv.h **** 
 114:src/../h/Riscv.h ****     enum BitMaskSstatus {
 115:src/../h/Riscv.h ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/ccaUBWIq.s 			page 6


 116:src/../h/Riscv.h ****         SSTATUS_SPIE = (1 << 5),
 117:src/../h/Riscv.h ****         SSTATUS_SPP = (1 << 8)
 118:src/../h/Riscv.h ****     };
 119:src/../h/Riscv.h **** 
 120:src/../h/Riscv.h ****     // mask set register sstatus
 121:src/../h/Riscv.h ****     static void ms_sstatus(uint64 mask);
 122:src/../h/Riscv.h **** 
 123:src/../h/Riscv.h ****     // mask clear register sstatus
 124:src/../h/Riscv.h ****     static void mc_sstatus(uint64 mask);
 125:src/../h/Riscv.h **** 
 126:src/../h/Riscv.h ****     // read register sstatus
 127:src/../h/Riscv.h ****     static uint64 r_sstatus();
 128:src/../h/Riscv.h **** 
 129:src/../h/Riscv.h ****     // write register sstatus
 130:src/../h/Riscv.h ****     static void w_sstatus(uint64 sstatus);
 131:src/../h/Riscv.h **** 
 132:src/../h/Riscv.h ****     // supervisor trap
 133:src/../h/Riscv.h ****     static void supervisorTrap();
 134:src/../h/Riscv.h **** 
 135:src/../h/Riscv.h **** private:
 136:src/../h/Riscv.h ****     // supervisor trap handler
 137:src/../h/Riscv.h ****     static void handleSupervisorTrap();
 138:src/../h/Riscv.h **** };
 139:src/../h/Riscv.h **** 
 140:src/../h/Riscv.h **** 
 141:src/../h/Riscv.h **** inline uint64 Riscv::r_sp() {
 142:src/../h/Riscv.h ****     uint64 volatile sp;
 143:src/../h/Riscv.h ****     __asm__ volatile ("mv %[sp], sp" : [sp] "=r"(sp));
 144:src/../h/Riscv.h ****     return sp;
 145:src/../h/Riscv.h **** }
 146:src/../h/Riscv.h **** 
 147:src/../h/Riscv.h **** inline void Riscv::w_sp(uint64 sp) {
 148:src/../h/Riscv.h ****     __asm__ volatile ("mv sp, %[sp]" : : [sp] "r"(sp));
 149:src/../h/Riscv.h **** }
 150:src/../h/Riscv.h **** 
 151:src/../h/Riscv.h **** inline uint64 Riscv::r_ps0() {
 152:src/../h/Riscv.h ****     uint64 volatile ps0, s0 = r_s0() - 8;
 153:src/../h/Riscv.h ****     __asm__ volatile ("mv %[ps0], %[s0]" : [ps0] "=r"(ps0) : [s0] "r"(s0));
 154:src/../h/Riscv.h ****     return ps0;
 155:src/../h/Riscv.h **** }
 156:src/../h/Riscv.h **** 
 157:src/../h/Riscv.h **** inline uint64 Riscv::r_s0() {
 158:src/../h/Riscv.h ****     uint64 volatile s0;
 159:src/../h/Riscv.h ****     __asm__ volatile ("mv %[s0], s0" : [s0] "=r"(s0));
 160:src/../h/Riscv.h ****     return s0;
 161:src/../h/Riscv.h **** }
 162:src/../h/Riscv.h **** 
 163:src/../h/Riscv.h **** inline uint64 Riscv::r_a0() {
 164:src/../h/Riscv.h ****     uint64 volatile a0;
 165:src/../h/Riscv.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
 166:src/../h/Riscv.h ****     return a0;
 167:src/../h/Riscv.h **** }
 168:src/../h/Riscv.h **** 
 169:src/../h/Riscv.h **** inline void Riscv::w_a0(uint64 a0) {
 170:src/../h/Riscv.h ****     __asm__ volatile ("mv a0, %[a0]" : : [a0] "r"(a0));
 171:src/../h/Riscv.h **** }
 172:src/../h/Riscv.h **** 
GAS LISTING /tmp/ccaUBWIq.s 			page 7


 173:src/../h/Riscv.h **** inline uint64 Riscv::r_a1() {
 174:src/../h/Riscv.h ****     uint64 volatile a1;
 175:src/../h/Riscv.h ****     __asm__ volatile ("mv %[a1], a1" : [a1] "=r"(a1));
 176:src/../h/Riscv.h ****     return a1;
 177:src/../h/Riscv.h **** }
 178:src/../h/Riscv.h **** 
 179:src/../h/Riscv.h **** inline void Riscv::w_a1(uint64 a1) {
 180:src/../h/Riscv.h ****     __asm__ volatile ("mv a1, %[a1]" : : [a1] "r"(a1));
 181:src/../h/Riscv.h **** }
 182:src/../h/Riscv.h **** 
 183:src/../h/Riscv.h **** inline uint64 Riscv::r_a2() {
 184:src/../h/Riscv.h ****     uint64 volatile a2;
 185:src/../h/Riscv.h ****     __asm__ volatile ("mv %[a2], a2" : [a2] "=r"(a2));
 186:src/../h/Riscv.h ****     return a2;
 187:src/../h/Riscv.h **** }
 188:src/../h/Riscv.h **** 
 189:src/../h/Riscv.h **** inline void Riscv::w_a2(uint64 a2) {
 190:src/../h/Riscv.h ****     __asm__ volatile ("mv a2, %[a2]" : : [a2] "r"(a2));
 191:src/../h/Riscv.h **** }
 192:src/../h/Riscv.h **** 
 193:src/../h/Riscv.h **** inline uint64 Riscv::r_scause() {
 194:src/../h/Riscv.h ****     uint64 volatile scause;
 195:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 196:src/../h/Riscv.h ****     return scause;
 197:src/../h/Riscv.h **** }
 198:src/../h/Riscv.h **** 
 199:src/../h/Riscv.h **** inline void Riscv::w_scause(uint64 scause) {
 200:src/../h/Riscv.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 201:src/../h/Riscv.h **** }
 202:src/../h/Riscv.h **** 
 203:src/../h/Riscv.h **** inline uint64 Riscv::r_sepc() {
 204:src/../h/Riscv.h ****     uint64 volatile sepc;
 205:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 206:src/../h/Riscv.h ****     return sepc;
 207:src/../h/Riscv.h **** }
 208:src/../h/Riscv.h **** 
 209:src/../h/Riscv.h **** inline void Riscv::w_sepc(uint64 sepc) {
 210:src/../h/Riscv.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 211:src/../h/Riscv.h **** }
 212:src/../h/Riscv.h **** 
 213:src/../h/Riscv.h **** inline uint64 Riscv::r_stvec() {
 214:src/../h/Riscv.h ****     uint64 volatile stvec;
 215:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 216:src/../h/Riscv.h ****     return stvec;
 217:src/../h/Riscv.h **** }
 218:src/../h/Riscv.h **** 
 219:src/../h/Riscv.h **** inline void Riscv::w_stvec(uint64 stvec) {
 220:src/../h/Riscv.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 118              		.loc 2 220 5 is_stmt 1
 119              		.loc 2 220 69 is_stmt 0
 120              	#APP
 121              	# 220 "src/../h/Riscv.h" 1
 221              	}
 122              		csrw stvec, a5
 123              	# 0 "" 2
 124              	.LVL11:
 125              	#NO_APP
GAS LISTING /tmp/ccaUBWIq.s 			page 8


 126              	.LBE23:
 127              	.LBE22:
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 128              		.loc 1 22 5 is_stmt 1
 129              	.LBB24:
 130              	.LBB25:
 222:src/../h/Riscv.h **** 
 223:src/../h/Riscv.h **** inline uint64 Riscv::r_stval() {
 224:src/../h/Riscv.h ****     uint64 volatile stval;
 225:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 226:src/../h/Riscv.h ****     return stval;
 227:src/../h/Riscv.h **** }
 228:src/../h/Riscv.h **** 
 229:src/../h/Riscv.h **** inline void Riscv::w_stval(uint64 stval) {
 230:src/../h/Riscv.h ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 231:src/../h/Riscv.h **** }
 232:src/../h/Riscv.h **** 
 233:src/../h/Riscv.h **** inline void Riscv::ms_sip(uint64 mask) {
 234:src/../h/Riscv.h ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 235:src/../h/Riscv.h **** }
 236:src/../h/Riscv.h **** 
 237:src/../h/Riscv.h **** inline void Riscv::mc_sip(uint64 mask) {
 238:src/../h/Riscv.h ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 239:src/../h/Riscv.h **** }
 240:src/../h/Riscv.h **** 
 241:src/../h/Riscv.h **** inline uint64 Riscv::r_sip() {
 242:src/../h/Riscv.h ****     uint64 volatile sip;
 243:src/../h/Riscv.h ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 244:src/../h/Riscv.h ****     return sip;
 245:src/../h/Riscv.h **** }
 246:src/../h/Riscv.h **** 
 247:src/../h/Riscv.h **** inline void Riscv::w_sip(uint64 sip) {
 248:src/../h/Riscv.h ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 249:src/../h/Riscv.h **** }
 250:src/../h/Riscv.h **** 
 251:src/../h/Riscv.h **** inline void Riscv::ms_sstatus(uint64 mask) {
 252:src/../h/Riscv.h ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 131              		.loc 2 252 5
 132              		.loc 2 252 68 is_stmt 0
 133 00b4 13092000 		li	s2,2
 134              	#APP
 135              	# 252 "src/../h/Riscv.h" 1
 253              	}
 136              		csrs sstatus, s2
 137              	# 0 "" 2
 138              	.LVL12:
 139              	#NO_APP
 140              	.LBE25:
 141              	.LBE24:
  23:src/main.cpp  **** 
  24:src/main.cpp  ****     uMain->join();
 142              		.loc 1 24 5 is_stmt 1
 143              		.loc 1 24 16 is_stmt 0
 144 00bc 13850400 		mv	a0,s1
 145 00c0 97000000 		call	_ZN3TCB4joinEv@plt
 145      E7800000 
GAS LISTING /tmp/ccaUBWIq.s 			page 9


 146              	.LVL13:
  25:src/main.cpp  **** 
  26:src/main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
 147              		.loc 1 26 5 is_stmt 1
 148              	.LBB26:
 149              	.LBB27:
 254:src/../h/Riscv.h **** 
 255:src/../h/Riscv.h **** inline void Riscv::mc_sstatus(uint64 mask) {
 256:src/../h/Riscv.h ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 150              		.loc 2 256 5
 151              		.loc 2 256 68 is_stmt 0
 152              	#APP
 153              	# 256 "src/../h/Riscv.h" 1
 257              	}
 154              		csrc sstatus, s2
 155              	# 0 "" 2
 156              	.LVL14:
 157              	#NO_APP
 158              	.LBE27:
 159              	.LBE26:
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     delete ThreadCollector::getInstance();
 160              		.loc 1 28 5 is_stmt 1
 161              		.loc 1 28 40 is_stmt 0
 162 00cc 97000000 		call	_ZN15ThreadCollector11getInstanceEv@plt
 162      E7800000 
 163              	.LVL15:
 164              		.loc 1 28 42
 165 00d4 630E0500 		beqz	a0,.L4
 166 00d8 93040500 		mv	s1,a0
 167              	.LVL16:
 168              		.loc 1 28 41 discriminator 1
 169 00dc 97000000 		call	_ZN15ThreadCollectorD1Ev@plt
 169      E7800000 
 170              	.LVL17:
 171              	.LBB28:
 172              	.LBB29:
 173              		.file 3 "src/../h/KernelObject.h"
   1:src/../h/KernelObject.h **** //
   2:src/../h/KernelObject.h **** // Created by xparh on 5/10/2022.
   3:src/../h/KernelObject.h **** //
   4:src/../h/KernelObject.h **** 
   5:src/../h/KernelObject.h **** #ifndef OS_PROJEKAT_KERNELOBJECT_H
   6:src/../h/KernelObject.h **** #define OS_PROJEKAT_KERNELOBJECT_H
   7:src/../h/KernelObject.h **** 
   8:src/../h/KernelObject.h **** #include "MemoryAllocator.h"
   9:src/../h/KernelObject.h **** 
  10:src/../h/KernelObject.h **** class KernelObject {
  11:src/../h/KernelObject.h **** public:
  12:src/../h/KernelObject.h ****     static void *operator new(size_t size) {
  13:src/../h/KernelObject.h ****         return kmalloc(size);
  14:src/../h/KernelObject.h ****     }
  15:src/../h/KernelObject.h **** 
  16:src/../h/KernelObject.h ****     static void *operator new[](size_t size) {
  17:src/../h/KernelObject.h ****         return kmalloc(size);
  18:src/../h/KernelObject.h ****     }
  19:src/../h/KernelObject.h **** 
GAS LISTING /tmp/ccaUBWIq.s 			page 10


  20:src/../h/KernelObject.h ****     static void operator delete(void *addr) {
  21:src/../h/KernelObject.h ****         kfree(addr);
 174              		.loc 3 21 9 is_stmt 1 discriminator 1
 175              		.loc 3 21 14 is_stmt 0 discriminator 1
 176 00e4 13850400 		mv	a0,s1
 177 00e8 97000000 		call	_Z5kfreePv@plt
 177      E7800000 
 178              	.LVL18:
 179              	.L4:
 180              	.LBE29:
 181              	.LBE28:
  29:src/main.cpp  ****     delete IdleThread::getInstance();
 182              		.loc 1 29 5 is_stmt 1
 183              		.loc 1 29 35 is_stmt 0
 184 00f0 97000000 		call	_ZN10IdleThread11getInstanceEv@plt
 184      E7800000 
 185              	.LVL19:
 186 00f8 93040500 		mv	s1,a0
 187              		.loc 1 29 37
 188 00fc 630C0500 		beqz	a0,.L5
 189              		.loc 1 29 36 discriminator 1
 190 0100 97000000 		call	_ZN10IdleThreadD1Ev@plt
 190      E7800000 
 191              	.LVL20:
 192              	.LBB30:
 193              	.LBB31:
 194              		.loc 3 21 9 is_stmt 1 discriminator 1
 195              		.loc 3 21 14 is_stmt 0 discriminator 1
 196 0108 13850400 		mv	a0,s1
 197 010c 97000000 		call	_Z5kfreePv@plt
 197      E7800000 
 198              	.LVL21:
 199              	.L5:
 200              	.LBE31:
 201              	.LBE30:
  30:src/main.cpp  ****     delete TimerInterrupt::getInstance();
 202              		.loc 1 30 5 is_stmt 1
 203              		.loc 1 30 39 is_stmt 0
 204 0114 97000000 		call	_ZN14TimerInterrupt11getInstanceEv@plt
 204      E7800000 
 205              	.LVL22:
 206 011c 93040500 		mv	s1,a0
 207              		.loc 1 30 41
 208 0120 630C0500 		beqz	a0,.L6
 209              		.loc 1 30 40 discriminator 1
 210 0124 97000000 		call	_ZN14TimerInterruptD1Ev@plt
 210      E7800000 
 211              	.LVL23:
 212              	.LBB32:
 213              	.LBB33:
 214              		.loc 3 21 9 is_stmt 1 discriminator 1
 215              		.loc 3 21 14 is_stmt 0 discriminator 1
 216 012c 13850400 		mv	a0,s1
 217 0130 97000000 		call	_Z5kfreePv@plt
 217      E7800000 
 218              	.LVL24:
 219              	.L6:
GAS LISTING /tmp/ccaUBWIq.s 			page 11


 220              	.LBE33:
 221              	.LBE32:
  31:src/main.cpp  ****     delete Scheduler::getInstance();
 222              		.loc 1 31 5 is_stmt 1
 223              		.loc 1 31 34 is_stmt 0
 224 0138 97000000 		call	_ZN9Scheduler11getInstanceEv@plt
 224      E7800000 
 225              	.LVL25:
 226 0140 93040500 		mv	s1,a0
 227              		.loc 1 31 36
 228 0144 630C0500 		beqz	a0,.L7
 229              		.loc 1 31 35 discriminator 1
 230 0148 97000000 		call	_ZN9SchedulerD1Ev@plt
 230      E7800000 
 231              	.LVL26:
 232              	.LBB34:
 233              	.LBB35:
 234              		.loc 3 21 9 is_stmt 1 discriminator 1
 235              		.loc 3 21 14 is_stmt 0 discriminator 1
 236 0150 13850400 		mv	a0,s1
 237 0154 97000000 		call	_Z5kfreePv@plt
 237      E7800000 
 238              	.LVL27:
 239              	.L7:
 240              	.LBE35:
 241              	.LBE34:
  32:src/main.cpp  **** 
  33:src/main.cpp  ****     kprintString("Main finished\n");
 242              		.loc 1 33 5 is_stmt 1
 243              		.loc 1 33 17 is_stmt 0
 244 015c 17050000 		lla	a0,.LC3
 244      13050500 
 245 0164 97000000 		call	_Z12kprintStringPKc@plt
 245      E7800000 
 246              	.LVL28:
  34:src/main.cpp  **** 
  35:src/main.cpp  ****     return 0;
 247              		.loc 1 35 5 is_stmt 1
  36:src/main.cpp  **** }
 248              		.loc 1 36 1 is_stmt 0
 249 016c 13050000 		li	a0,0
 250 0170 83308101 		ld	ra,24(sp)
 251              		.cfi_restore 1
 252 0174 03340101 		ld	s0,16(sp)
 253              		.cfi_restore 8
 254              		.cfi_def_cfa 2, 32
 255 0178 83348100 		ld	s1,8(sp)
 256              		.cfi_restore 9
 257 017c 03390100 		ld	s2,0(sp)
 258              		.cfi_restore 18
 259 0180 13010102 		addi	sp,sp,32
 260              		.cfi_def_cfa_offset 0
 261 0184 67800000 		jr	ra
 262              		.cfi_endproc
 263              	.LFE93:
 265              	.Letext0:
 266              		.file 4 "src/../h/../lib/hw.h"
GAS LISTING /tmp/ccaUBWIq.s 			page 12


 267              		.file 5 "src/../h/Mutex.h"
 268              		.file 6 "src/../h/ThreadNode.h"
 269              		.file 7 "src/../h/TCB.h"
 270              		.file 8 "src/../h/ThreadList.h"
 271              		.file 9 "src/../h/KernelSemaphore.h"
 272              		.file 10 "src/../h/TimerInterrupt.h"
 273              		.file 11 "src/../h/Scheduler.h"
 274              		.file 12 "src/../h/ThreadCollector.h"
 275              		.file 13 "src/../h/IdleThread.h"
 276              		.file 14 "src/../h/MemoryAllocator.h"
 277              		.file 15 "src/../h/SysPrint.h"
GAS LISTING /tmp/ccaUBWIq.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccaUBWIq.s:8      .text:0000000000000000 _ZZ4mainENUlPvE_4_FUNES_
     /tmp/ccaUBWIq.s:12     .text:0000000000000000 .L0 
     /tmp/ccaUBWIq.s:13     .text:0000000000000000 .L0 
     /tmp/ccaUBWIq.s:14     .text:0000000000000004 .L0 
     /tmp/ccaUBWIq.s:17     .text:000000000000000c .L0 
     /tmp/ccaUBWIq.s:18     .text:000000000000000c .L0 
     /tmp/ccaUBWIq.s:20     .text:0000000000000010 .L0 
     /tmp/ccaUBWIq.s:25     .text:0000000000000010 .L0 
     /tmp/ccaUBWIq.s:26     .text:0000000000000010 .L0 
     /tmp/ccaUBWIq.s:31     .text:0000000000000018 .L0 
     /tmp/ccaUBWIq.s:32     .text:000000000000001c .L0 
     /tmp/ccaUBWIq.s:34     .text:0000000000000020 .L0 
     /tmp/ccaUBWIq.s:35     .text:0000000000000020 .L0 
     /tmp/ccaUBWIq.s:37     .text:0000000000000024 .L0 
     /tmp/ccaUBWIq.s:39     .text:0000000000000028 .L0 
     /tmp/ccaUBWIq.s:59     .text:0000000000000028 main
     /tmp/ccaUBWIq.s:62     .text:0000000000000028 .L0 
     /tmp/ccaUBWIq.s:63     .text:0000000000000028 .L0 
     /tmp/ccaUBWIq.s:64     .text:000000000000002c .L0 
     /tmp/ccaUBWIq.s:69     .text:000000000000003c .L0 
     /tmp/ccaUBWIq.s:70     .text:000000000000003c .L0 
     /tmp/ccaUBWIq.s:71     .text:000000000000003c .L0 
     /tmp/ccaUBWIq.s:72     .text:000000000000003c .L0 
     /tmp/ccaUBWIq.s:74     .text:0000000000000040 .L0 
     /tmp/ccaUBWIq.s:76     .text:0000000000000040 .L0 
     /tmp/ccaUBWIq.s:77     .text:0000000000000040 .L0 
     /tmp/ccaUBWIq.s:81     .text:0000000000000050 .L0 
     /tmp/ccaUBWIq.s:82     .text:0000000000000050 .L0 
     /tmp/ccaUBWIq.s:89     .text:0000000000000064 .L0 
     /tmp/ccaUBWIq.s:90     .text:0000000000000064 .L0 
     /tmp/ccaUBWIq.s:94     .text:0000000000000074 .L0 
     /tmp/ccaUBWIq.s:95     .text:0000000000000074 .L0 
     /tmp/ccaUBWIq.s:99     .text:0000000000000080 .L0 
     /tmp/ccaUBWIq.s:100    .text:0000000000000080 .L0 
     /tmp/ccaUBWIq.s:107    .text:0000000000000098 .L0 
     /tmp/ccaUBWIq.s:108    .text:0000000000000098 .L0 
     /tmp/ccaUBWIq.s:112    .text:00000000000000a8 .L0 
     /tmp/ccaUBWIq.s:113    .text:00000000000000a8 .L0 
     /tmp/ccaUBWIq.s:119    .text:00000000000000b0 .L0 
    src/../h/Riscv.h:220    .text:00000000000000b0 .L0 
     /tmp/ccaUBWIq.s:131    .text:00000000000000b4 .L0 
     /tmp/ccaUBWIq.s:132    .text:00000000000000b4 .L0 
     /tmp/ccaUBWIq.s:133    .text:00000000000000b4 .L0 
     /tmp/ccaUBWIq.s:143    .text:00000000000000bc .L0 
     /tmp/ccaUBWIq.s:144    .text:00000000000000bc .L0 
     /tmp/ccaUBWIq.s:150    .text:00000000000000c8 .L0 
     /tmp/ccaUBWIq.s:151    .text:00000000000000c8 .L0 
    src/../h/Riscv.h:256    .text:00000000000000c8 .L0 
     /tmp/ccaUBWIq.s:161    .text:00000000000000cc .L0 
     /tmp/ccaUBWIq.s:162    .text:00000000000000cc .L0 
     /tmp/ccaUBWIq.s:165    .text:00000000000000d4 .L0 
     /tmp/ccaUBWIq.s:169    .text:00000000000000dc .L0 
     /tmp/ccaUBWIq.s:175    .text:00000000000000e4 .L0 
     /tmp/ccaUBWIq.s:176    .text:00000000000000e4 .L0 
     /tmp/ccaUBWIq.s:183    .text:00000000000000f0 .L0 
GAS LISTING /tmp/ccaUBWIq.s 			page 14


     /tmp/ccaUBWIq.s:184    .text:00000000000000f0 .L0 
     /tmp/ccaUBWIq.s:188    .text:00000000000000fc .L0 
     /tmp/ccaUBWIq.s:190    .text:0000000000000100 .L0 
     /tmp/ccaUBWIq.s:195    .text:0000000000000108 .L0 
     /tmp/ccaUBWIq.s:196    .text:0000000000000108 .L0 
     /tmp/ccaUBWIq.s:203    .text:0000000000000114 .L0 
     /tmp/ccaUBWIq.s:204    .text:0000000000000114 .L0 
     /tmp/ccaUBWIq.s:208    .text:0000000000000120 .L0 
     /tmp/ccaUBWIq.s:210    .text:0000000000000124 .L0 
     /tmp/ccaUBWIq.s:215    .text:000000000000012c .L0 
     /tmp/ccaUBWIq.s:216    .text:000000000000012c .L0 
     /tmp/ccaUBWIq.s:223    .text:0000000000000138 .L0 
     /tmp/ccaUBWIq.s:224    .text:0000000000000138 .L0 
     /tmp/ccaUBWIq.s:228    .text:0000000000000144 .L0 
     /tmp/ccaUBWIq.s:230    .text:0000000000000148 .L0 
     /tmp/ccaUBWIq.s:235    .text:0000000000000150 .L0 
     /tmp/ccaUBWIq.s:236    .text:0000000000000150 .L0 
     /tmp/ccaUBWIq.s:243    .text:000000000000015c .L0 
     /tmp/ccaUBWIq.s:244    .text:000000000000015c .L0 
     /tmp/ccaUBWIq.s:248    .text:000000000000016c .L0 
     /tmp/ccaUBWIq.s:249    .text:000000000000016c .L0 
     /tmp/ccaUBWIq.s:251    .text:0000000000000174 .L0 
     /tmp/ccaUBWIq.s:253    .text:0000000000000178 .L0 
     /tmp/ccaUBWIq.s:254    .text:0000000000000178 .L0 
     /tmp/ccaUBWIq.s:256    .text:000000000000017c .L0 
     /tmp/ccaUBWIq.s:258    .text:0000000000000180 .L0 
     /tmp/ccaUBWIq.s:260    .text:0000000000000184 .L0 
     /tmp/ccaUBWIq.s:262    .text:0000000000000188 .L0 
     /tmp/ccaUBWIq.s:278    .text:0000000000000188 .L0 
     /tmp/ccaUBWIq.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccaUBWIq.s:77     .text:0000000000000040 .L0 
     /tmp/ccaUBWIq.s:47     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccaUBWIq.s:90     .text:0000000000000064 .L0 
     /tmp/ccaUBWIq.s:95     .text:0000000000000074 .L0 
     /tmp/ccaUBWIq.s:101    .text:0000000000000084 .L0 
     /tmp/ccaUBWIq.s:50     .rodata.str1.8:0000000000000028 .LC2
     /tmp/ccaUBWIq.s:108    .text:0000000000000098 .L0 
     /tmp/ccaUBWIq.s:113    .text:00000000000000a8 .L0 
     /tmp/ccaUBWIq.s:53     .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccaUBWIq.s:244    .text:000000000000015c .L0 
     /tmp/ccaUBWIq.s:179    .text:00000000000000f0 .L4
     /tmp/ccaUBWIq.s:199    .text:0000000000000114 .L5
     /tmp/ccaUBWIq.s:219    .text:0000000000000138 .L6
     /tmp/ccaUBWIq.s:239    .text:000000000000015c .L7
     /tmp/ccaUBWIq.s:2671   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccaUBWIq.s:4477   .debug_str:0000000000001119 .LASF294
     /tmp/ccaUBWIq.s:4081   .debug_str:0000000000000470 .LASF295
     /tmp/ccaUBWIq.s:4305   .debug_str:0000000000000b6f .LASF296
     /tmp/ccaUBWIq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccaUBWIq.s:265    .text:0000000000000188 .Letext0
     /tmp/ccaUBWIq.s:3927   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccaUBWIq.s:4127   .debug_str:00000000000005b0 .LASF0
     /tmp/ccaUBWIq.s:4169   .debug_str:00000000000006cd .LASF1
     /tmp/ccaUBWIq.s:4319   .debug_str:0000000000000c17 .LASF2
     /tmp/ccaUBWIq.s:4333   .debug_str:0000000000000c6a .LASF4
     /tmp/ccaUBWIq.s:4141   .debug_str:0000000000000601 .LASF3
     /tmp/ccaUBWIq.s:3951   .debug_str:00000000000000c3 .LASF5
GAS LISTING /tmp/ccaUBWIq.s 			page 15


     /tmp/ccaUBWIq.s:4283   .debug_str:0000000000000ab7 .LASF6
     /tmp/ccaUBWIq.s:4271   .debug_str:0000000000000a40 .LASF7
     /tmp/ccaUBWIq.s:4155   .debug_str:000000000000066d .LASF8
     /tmp/ccaUBWIq.s:4093   .debug_str:00000000000004ab .LASF9
     /tmp/ccaUBWIq.s:4103   .debug_str:00000000000004fa .LASF10
     /tmp/ccaUBWIq.s:4009   .debug_str:0000000000000281 .LASF11
     /tmp/ccaUBWIq.s:4077   .debug_str:0000000000000459 .LASF12
     /tmp/ccaUBWIq.s:4031   .debug_str:000000000000031d .LASF13
     /tmp/ccaUBWIq.s:4007   .debug_str:0000000000000271 .LASF14
     /tmp/ccaUBWIq.s:4379   .debug_str:0000000000000dda .LASF15
     /tmp/ccaUBWIq.s:4061   .debug_str:00000000000003d6 .LASF16
     /tmp/ccaUBWIq.s:4359   .debug_str:0000000000000d11 .LASF17
     /tmp/ccaUBWIq.s:4195   .debug_str:00000000000007bd .LASF18
     /tmp/ccaUBWIq.s:4237   .debug_str:000000000000093b .LASF23
     /tmp/ccaUBWIq.s:4049   .debug_str:0000000000000393 .LASF19
     /tmp/ccaUBWIq.s:4289   .debug_str:0000000000000add .LASF21
     /tmp/ccaUBWIq.s:4383   .debug_str:0000000000000e02 .LASF20
     /tmp/ccaUBWIq.s:4285   .debug_str:0000000000000abe .LASF22
     /tmp/ccaUBWIq.s:3975   .debug_str:000000000000019f .LASF31
     /tmp/ccaUBWIq.s:4033   .debug_str:000000000000032d .LASF24
     /tmp/ccaUBWIq.s:4519   .debug_str:0000000000001318 .LASF25
     /tmp/ccaUBWIq.s:4395   .debug_str:0000000000000e55 .LASF26
     /tmp/ccaUBWIq.s:3993   .debug_str:0000000000000205 .LASF27
     /tmp/ccaUBWIq.s:4377   .debug_str:0000000000000dc4 .LASF28
     /tmp/ccaUBWIq.s:3941   .debug_str:000000000000004b .LASF174
     /tmp/ccaUBWIq.s:4449   .debug_str:0000000000001039 .LASF176
     /tmp/ccaUBWIq.s:4357   .debug_str:0000000000000cfe .LASF105
     /tmp/ccaUBWIq.s:3977   .debug_str:00000000000001a6 .LASF107
     /tmp/ccaUBWIq.s:4063   .debug_str:00000000000003ec .LASF29
     /tmp/ccaUBWIq.s:4171   .debug_str:00000000000006e0 .LASF30
     /tmp/ccaUBWIq.s:4163   .debug_str:00000000000006b4 .LASF32
     /tmp/ccaUBWIq.s:4011   .debug_str:0000000000000290 .LASF33
     /tmp/ccaUBWIq.s:3973   .debug_str:000000000000019a .LASF34
     /tmp/ccaUBWIq.s:4507   .debug_str:00000000000012bf .LASF297
     /tmp/ccaUBWIq.s:4001   .debug_str:000000000000023e .LASF35
     /tmp/ccaUBWIq.s:3989   .debug_str:00000000000001ee .LASF36
     /tmp/ccaUBWIq.s:3933   .debug_str:0000000000000021 .LASF37
     /tmp/ccaUBWIq.s:4097   .debug_str:00000000000004d1 .LASF38
     /tmp/ccaUBWIq.s:4389   .debug_str:0000000000000e2f .LASF277
     /tmp/ccaUBWIq.s:4387   .debug_str:0000000000000e19 .LASF298
     /tmp/ccaUBWIq.s:4251   .debug_str:00000000000009c2 .LASF299
     /tmp/ccaUBWIq.s:4175   .debug_str:0000000000000704 .LASF83
     /tmp/ccaUBWIq.s:4321   .debug_str:0000000000000c25 .LASF39
     /tmp/ccaUBWIq.s:3997   .debug_str:000000000000021a .LASF43
     /tmp/ccaUBWIq.s:4197   .debug_str:00000000000007c2 .LASF40
     /tmp/ccaUBWIq.s:4095   .debug_str:00000000000004bb .LASF41
     /tmp/ccaUBWIq.s:4445   .debug_str:0000000000001022 .LASF42
     /tmp/ccaUBWIq.s:4345   .debug_str:0000000000000cb3 .LASF44
     /tmp/ccaUBWIq.s:4301   .debug_str:0000000000000b59 .LASF45
     /tmp/ccaUBWIq.s:4295   .debug_str:0000000000000b17 .LASF46
     /tmp/ccaUBWIq.s:4391   .debug_str:0000000000000e37 .LASF47
     /tmp/ccaUBWIq.s:4221   .debug_str:00000000000008aa .LASF48
     /tmp/ccaUBWIq.s:3985   .debug_str:00000000000001d2 .LASF49
     /tmp/ccaUBWIq.s:4459   .debug_str:000000000000109f .LASF50
     /tmp/ccaUBWIq.s:4199   .debug_str:00000000000007cd .LASF51
     /tmp/ccaUBWIq.s:4213   .debug_str:0000000000000868 .LASF52
     /tmp/ccaUBWIq.s:4119   .debug_str:0000000000000578 .LASF53
GAS LISTING /tmp/ccaUBWIq.s 			page 16


     /tmp/ccaUBWIq.s:4429   .debug_str:0000000000000f99 .LASF54
     /tmp/ccaUBWIq.s:4177   .debug_str:000000000000070b .LASF55
     /tmp/ccaUBWIq.s:4451   .debug_str:0000000000001050 .LASF56
     /tmp/ccaUBWIq.s:4495   .debug_str:0000000000001241 .LASF57
     /tmp/ccaUBWIq.s:4529   .debug_str:0000000000001367 .LASF58
     /tmp/ccaUBWIq.s:4045   .debug_str:000000000000037b .LASF59
     /tmp/ccaUBWIq.s:4279   .debug_str:0000000000000a8a .LASF60
     /tmp/ccaUBWIq.s:4165   .debug_str:00000000000006b9 .LASF61
     /tmp/ccaUBWIq.s:4057   .debug_str:00000000000003b0 .LASF62
     /tmp/ccaUBWIq.s:4191   .debug_str:000000000000079c .LASF63
     /tmp/ccaUBWIq.s:4525   .debug_str:000000000000134c .LASF64
     /tmp/ccaUBWIq.s:4161   .debug_str:00000000000006ad .LASF65
     /tmp/ccaUBWIq.s:4293   .debug_str:0000000000000b05 .LASF66
     /tmp/ccaUBWIq.s:3987   .debug_str:00000000000001de .LASF67
     /tmp/ccaUBWIq.s:4361   .debug_str:0000000000000d27 .LASF68
     /tmp/ccaUBWIq.s:4531   .debug_str:0000000000001382 .LASF69
     /tmp/ccaUBWIq.s:4187   .debug_str:0000000000000779 .LASF70
     /tmp/ccaUBWIq.s:4079   .debug_str:0000000000000468 .LASF71
     /tmp/ccaUBWIq.s:4369   .debug_str:0000000000000d6f .LASF72
     /tmp/ccaUBWIq.s:4405   .debug_str:0000000000000ec3 .LASF73
     /tmp/ccaUBWIq.s:3935   .debug_str:0000000000000029 .LASF74
     /tmp/ccaUBWIq.s:4419   .debug_str:0000000000000f45 .LASF75
     /tmp/ccaUBWIq.s:4453   .debug_str:0000000000001069 .LASF76
     /tmp/ccaUBWIq.s:4173   .debug_str:00000000000006fe .LASF77
     /tmp/ccaUBWIq.s:4423   .debug_str:0000000000000f76 .LASF79
     /tmp/ccaUBWIq.s:4047   .debug_str:000000000000038a .LASF78
     /tmp/ccaUBWIq.s:4017   .debug_str:00000000000002af .LASF80
     /tmp/ccaUBWIq.s:4353   .debug_str:0000000000000ce7 .LASF81
     /tmp/ccaUBWIq.s:4151   .debug_str:000000000000064d .LASF82
     /tmp/ccaUBWIq.s:4413   .debug_str:0000000000000f20 .LASF84
     /tmp/ccaUBWIq.s:4335   .debug_str:0000000000000c71 .LASF85
     /tmp/ccaUBWIq.s:3947   .debug_str:000000000000009f .LASF86
     /tmp/ccaUBWIq.s:3939   .debug_str:0000000000000046 .LASF87
     /tmp/ccaUBWIq.s:4515   .debug_str:00000000000012fb .LASF88
     /tmp/ccaUBWIq.s:4475   .debug_str:000000000000110d .LASF89
     /tmp/ccaUBWIq.s:4041   .debug_str:000000000000035e .LASF90
     /tmp/ccaUBWIq.s:4431   .debug_str:0000000000000fab .LASF91
     /tmp/ccaUBWIq.s:4427   .debug_str:0000000000000f8f .LASF92
     /tmp/ccaUBWIq.s:4463   .debug_str:00000000000010bb .LASF93
     /tmp/ccaUBWIq.s:4331   .debug_str:0000000000000c5c .LASF94
     /tmp/ccaUBWIq.s:4131   .debug_str:00000000000005c5 .LASF95
     /tmp/ccaUBWIq.s:4311   .debug_str:0000000000000bf4 .LASF96
     /tmp/ccaUBWIq.s:4327   .debug_str:0000000000000c50 .LASF97
     /tmp/ccaUBWIq.s:4071   .debug_str:0000000000000440 .LASF98
     /tmp/ccaUBWIq.s:3991   .debug_str:00000000000001f7 .LASF99
     /tmp/ccaUBWIq.s:4179   .debug_str:0000000000000718 .LASF101
     /tmp/ccaUBWIq.s:4447   .debug_str:000000000000102a .LASF100
     /tmp/ccaUBWIq.s:4487   .debug_str:00000000000011fa .LASF102
     /tmp/ccaUBWIq.s:4239   .debug_str:0000000000000941 .LASF103
     /tmp/ccaUBWIq.s:4397   .debug_str:0000000000000e6b .LASF104
     /tmp/ccaUBWIq.s:4035   .debug_str:000000000000033a .LASF106
     /tmp/ccaUBWIq.s:3945   .debug_str:0000000000000077 .LASF108
     /tmp/ccaUBWIq.s:4343   .debug_str:0000000000000ca2 .LASF164
     /tmp/ccaUBWIq.s:4105   .debug_str:0000000000000508 .LASF109
     /tmp/ccaUBWIq.s:4241   .debug_str:0000000000000951 .LASF112
     /tmp/ccaUBWIq.s:3967   .debug_str:0000000000000163 .LASF110
     /tmp/ccaUBWIq.s:4037   .debug_str:0000000000000348 .LASF111
GAS LISTING /tmp/ccaUBWIq.s 			page 17


     /tmp/ccaUBWIq.s:4291   .debug_str:0000000000000aee .LASF113
     /tmp/ccaUBWIq.s:4425   .debug_str:0000000000000f86 .LASF114
     /tmp/ccaUBWIq.s:3955   .debug_str:00000000000000e5 .LASF115
     /tmp/ccaUBWIq.s:4313   .debug_str:0000000000000bfa .LASF116
     /tmp/ccaUBWIq.s:4245   .debug_str:000000000000097a .LASF117
     /tmp/ccaUBWIq.s:4189   .debug_str:0000000000000794 .LASF118
     /tmp/ccaUBWIq.s:4211   .debug_str:0000000000000842 .LASF119
     /tmp/ccaUBWIq.s:4261   .debug_str:00000000000009fb .LASF120
     /tmp/ccaUBWIq.s:4149   .debug_str:000000000000062e .LASF121
     /tmp/ccaUBWIq.s:4259   .debug_str:00000000000009f2 .LASF122
     /tmp/ccaUBWIq.s:3953   .debug_str:00000000000000ca .LASF123
     /tmp/ccaUBWIq.s:4347   .debug_str:0000000000000cc6 .LASF124
     /tmp/ccaUBWIq.s:4411   .debug_str:0000000000000f02 .LASF125
     /tmp/ccaUBWIq.s:4533   .debug_str:0000000000001391 .LASF126
     /tmp/ccaUBWIq.s:4157   .debug_str:0000000000000680 .LASF127
     /tmp/ccaUBWIq.s:4329   .debug_str:0000000000000c55 .LASF128
     /tmp/ccaUBWIq.s:4375   .debug_str:0000000000000dab .LASF129
     /tmp/ccaUBWIq.s:4013   .debug_str:0000000000000295 .LASF130
     /tmp/ccaUBWIq.s:4509   .debug_str:00000000000012c6 .LASF131
     /tmp/ccaUBWIq.s:3971   .debug_str:0000000000000193 .LASF132
     /tmp/ccaUBWIq.s:4247   .debug_str:00000000000009a1 .LASF133
     /tmp/ccaUBWIq.s:4527   .debug_str:0000000000001360 .LASF134
     /tmp/ccaUBWIq.s:4019   .debug_str:00000000000002c2 .LASF135
     /tmp/ccaUBWIq.s:4129   .debug_str:00000000000005bd .LASF136
     /tmp/ccaUBWIq.s:4501   .debug_str:0000000000001284 .LASF137
     /tmp/ccaUBWIq.s:4053   .debug_str:00000000000003a3 .LASF138
     /tmp/ccaUBWIq.s:4181   .debug_str:0000000000000731 .LASF139
     /tmp/ccaUBWIq.s:4073   .debug_str:000000000000044c .LASF140
     /tmp/ccaUBWIq.s:4185   .debug_str:000000000000075f .LASF141
     /tmp/ccaUBWIq.s:4255   .debug_str:00000000000009d8 .LASF142
     /tmp/ccaUBWIq.s:4521   .debug_str:0000000000001325 .LASF143
     /tmp/ccaUBWIq.s:4465   .debug_str:00000000000010c2 .LASF144
     /tmp/ccaUBWIq.s:4223   .debug_str:00000000000008c1 .LASF145
     /tmp/ccaUBWIq.s:4217   .debug_str:0000000000000885 .LASF146
     /tmp/ccaUBWIq.s:4409   .debug_str:0000000000000ed2 .LASF147
     /tmp/ccaUBWIq.s:4263   .debug_str:0000000000000a07 .LASF148
     /tmp/ccaUBWIq.s:4183   .debug_str:000000000000074b .LASF149
     /tmp/ccaUBWIq.s:4075   .debug_str:0000000000000454 .LASF150
     /tmp/ccaUBWIq.s:4227   .debug_str:00000000000008f8 .LASF151
     /tmp/ccaUBWIq.s:4139   .debug_str:00000000000005fc .LASF152
     /tmp/ccaUBWIq.s:4167   .debug_str:00000000000006c8 .LASF153
     /tmp/ccaUBWIq.s:4367   .debug_str:0000000000000d5f .LASF154
     /tmp/ccaUBWIq.s:4201   .debug_str:00000000000007d4 .LASF155
     /tmp/ccaUBWIq.s:4381   .debug_str:0000000000000de6 .LASF156
     /tmp/ccaUBWIq.s:4497   .debug_str:0000000000001250 .LASF157
     /tmp/ccaUBWIq.s:4339   .debug_str:0000000000000c8a .LASF158
     /tmp/ccaUBWIq.s:4473   .debug_str:00000000000010f4 .LASF159
     /tmp/ccaUBWIq.s:4125   .debug_str:00000000000005aa .LASF160
     /tmp/ccaUBWIq.s:4485   .debug_str:00000000000011dd .LASF161
     /tmp/ccaUBWIq.s:4513   .debug_str:00000000000012f3 .LASF162
     /tmp/ccaUBWIq.s:4115   .debug_str:0000000000000553 .LASF163
     /tmp/ccaUBWIq.s:4393   .debug_str:0000000000000e42 .LASF165
     /tmp/ccaUBWIq.s:4469   .debug_str:00000000000010dc .LASF166
     /tmp/ccaUBWIq.s:4455   .debug_str:0000000000001089 .LASF300
     /tmp/ccaUBWIq.s:4069   .debug_str:0000000000000434 .LASF167
     /tmp/ccaUBWIq.s:4415   .debug_str:0000000000000f28 .LASF168
     /tmp/ccaUBWIq.s:4039   .debug_str:0000000000000352 .LASF169
GAS LISTING /tmp/ccaUBWIq.s 			page 18


     /tmp/ccaUBWIq.s:4137   .debug_str:00000000000005ea .LASF170
     /tmp/ccaUBWIq.s:4099   .debug_str:00000000000004d6 .LASF171
     /tmp/ccaUBWIq.s:4005   .debug_str:0000000000000260 .LASF172
     /tmp/ccaUBWIq.s:4403   .debug_str:0000000000000ea5 .LASF173
     /tmp/ccaUBWIq.s:4113   .debug_str:0000000000000548 .LASF175
     /tmp/ccaUBWIq.s:4193   .debug_str:00000000000007a5 .LASF177
     /tmp/ccaUBWIq.s:4505   .debug_str:00000000000012b0 .LASF178
     /tmp/ccaUBWIq.s:4003   .debug_str:0000000000000244 .LASF179
     /tmp/ccaUBWIq.s:4399   .debug_str:0000000000000e86 .LASF180
     /tmp/ccaUBWIq.s:3943   .debug_str:000000000000005b .LASF181
     /tmp/ccaUBWIq.s:4307   .debug_str:0000000000000bd0 .LASF184
     /tmp/ccaUBWIq.s:4437   .debug_str:0000000000000fda .LASF186
     /tmp/ccaUBWIq.s:3979   .debug_str:00000000000001bd .LASF182
     /tmp/ccaUBWIq.s:4229   .debug_str:00000000000008fd .LASF183
     /tmp/ccaUBWIq.s:4493   .debug_str:000000000000123b .LASF185
     /tmp/ccaUBWIq.s:4471   .debug_str:00000000000010e2 .LASF187
     /tmp/ccaUBWIq.s:4101   .debug_str:00000000000004f5 .LASF188
     /tmp/ccaUBWIq.s:4269   .debug_str:0000000000000a2f .LASF189
     /tmp/ccaUBWIq.s:4235   .debug_str:0000000000000936 .LASF190
     /tmp/ccaUBWIq.s:4253   .debug_str:00000000000009c7 .LASF191
     /tmp/ccaUBWIq.s:4145   .debug_str:0000000000000624 .LASF192
     /tmp/ccaUBWIq.s:4205   .debug_str:000000000000080e .LASF193
     /tmp/ccaUBWIq.s:4479   .debug_str:00000000000011bb .LASF194
     /tmp/ccaUBWIq.s:4143   .debug_str:0000000000000613 .LASF195
     /tmp/ccaUBWIq.s:4147   .debug_str:0000000000000629 .LASF196
     /tmp/ccaUBWIq.s:4265   .debug_str:0000000000000a13 .LASF197
     /tmp/ccaUBWIq.s:4481   .debug_str:00000000000011c0 .LASF198
     /tmp/ccaUBWIq.s:4043   .debug_str:000000000000036a .LASF199
     /tmp/ccaUBWIq.s:3983   .debug_str:00000000000001cd .LASF200
     /tmp/ccaUBWIq.s:4153   .debug_str:000000000000065c .LASF201
     /tmp/ccaUBWIq.s:4443   .debug_str:0000000000001019 .LASF202
     /tmp/ccaUBWIq.s:4433   .debug_str:0000000000000fb3 .LASF203
     /tmp/ccaUBWIq.s:4315   .debug_str:0000000000000c03 .LASF204
     /tmp/ccaUBWIq.s:4243   .debug_str:0000000000000965 .LASF205
     /tmp/ccaUBWIq.s:4457   .debug_str:0000000000001098 .LASF206
     /tmp/ccaUBWIq.s:4281   .debug_str:0000000000000aa4 .LASF207
     /tmp/ccaUBWIq.s:4231   .debug_str:000000000000090e .LASF208
     /tmp/ccaUBWIq.s:4159   .debug_str:000000000000069a .LASF209
     /tmp/ccaUBWIq.s:4491   .debug_str:0000000000001233 .LASF210
     /tmp/ccaUBWIq.s:4337   .debug_str:0000000000000c76 .LASF211
     /tmp/ccaUBWIq.s:4225   .debug_str:00000000000008f0 .LASF212
     /tmp/ccaUBWIq.s:4083   .debug_str:000000000000047d .LASF213
     /tmp/ccaUBWIq.s:4249   .debug_str:00000000000009ba .LASF214
     /tmp/ccaUBWIq.s:4299   .debug_str:0000000000000b45 .LASF215
     /tmp/ccaUBWIq.s:4363   .debug_str:0000000000000d43 .LASF216
     /tmp/ccaUBWIq.s:4135   .debug_str:00000000000005d6 .LASF217
     /tmp/ccaUBWIq.s:4373   .debug_str:0000000000000da4 .LASF218
     /tmp/ccaUBWIq.s:4027   .debug_str:0000000000000304 .LASF219
     /tmp/ccaUBWIq.s:4341   .debug_str:0000000000000c9b .LASF220
     /tmp/ccaUBWIq.s:4015   .debug_str:000000000000029c .LASF221
     /tmp/ccaUBWIq.s:4021   .debug_str:00000000000002db .LASF222
     /tmp/ccaUBWIq.s:4123   .debug_str:0000000000000598 .LASF223
     /tmp/ccaUBWIq.s:4133   .debug_str:00000000000005d0 .LASF224
     /tmp/ccaUBWIq.s:4109   .debug_str:0000000000000522 .LASF225
     /tmp/ccaUBWIq.s:3929   .debug_str:0000000000000000 .LASF226
     /tmp/ccaUBWIq.s:4323   .debug_str:0000000000000c2f .LASF227
     /tmp/ccaUBWIq.s:4317   .debug_str:0000000000000c0c .LASF228
GAS LISTING /tmp/ccaUBWIq.s 			page 19


     /tmp/ccaUBWIq.s:4517   .debug_str:0000000000001300 .LASF229
     /tmp/ccaUBWIq.s:4407   .debug_str:0000000000000ec8 .LASF230
     /tmp/ccaUBWIq.s:4499   .debug_str:000000000000126e .LASF231
     /tmp/ccaUBWIq.s:4467   .debug_str:00000000000010d2 .LASF232
     /tmp/ccaUBWIq.s:4207   .debug_str:000000000000081f .LASF233
     /tmp/ccaUBWIq.s:4107   .debug_str:0000000000000513 .LASF234
     /tmp/ccaUBWIq.s:3963   .debug_str:000000000000013d .LASF235
     /tmp/ccaUBWIq.s:4273   .debug_str:0000000000000a53 .LASF236
     /tmp/ccaUBWIq.s:4065   .debug_str:00000000000003f7 .LASF237
     /tmp/ccaUBWIq.s:3999   .debug_str:000000000000022f .LASF238
     /tmp/ccaUBWIq.s:4203   .debug_str:00000000000007ed .LASF239
     /tmp/ccaUBWIq.s:4055   .debug_str:00000000000003ab .LASF240
     /tmp/ccaUBWIq.s:4067   .debug_str:0000000000000419 .LASF241
     /tmp/ccaUBWIq.s:4059   .debug_str:00000000000003ca .LASF242
     /tmp/ccaUBWIq.s:4371   .debug_str:0000000000000d81 .LASF243
     /tmp/ccaUBWIq.s:4257   .debug_str:00000000000009e2 .LASF244
     /tmp/ccaUBWIq.s:4483   .debug_str:00000000000011c5 .LASF245
     /tmp/ccaUBWIq.s:3949   .debug_str:00000000000000ab .LASF246
     /tmp/ccaUBWIq.s:4325   .debug_str:0000000000000c47 .LASF247
     /tmp/ccaUBWIq.s:4355   .debug_str:0000000000000cec .LASF248
     /tmp/ccaUBWIq.s:4091   .debug_str:00000000000004a1 .LASF249
     /tmp/ccaUBWIq.s:4511   .debug_str:00000000000012df .LASF301
     /tmp/ccaUBWIq.s:4121   .debug_str:0000000000000580 .LASF257
     /tmp/ccaUBWIq.s:4441   .debug_str:0000000000000ffc .LASF250
     /tmp/ccaUBWIq.s:4051   .debug_str:0000000000000398 .LASF251
     /tmp/ccaUBWIq.s:4435   .debug_str:0000000000000fc8 .LASF252
     /tmp/ccaUBWIq.s:4503   .debug_str:000000000000129e .LASF253
     /tmp/ccaUBWIq.s:4351   .debug_str:0000000000000cd6 .LASF254
     /tmp/ccaUBWIq.s:4401   .debug_str:0000000000000e95 .LASF255
     /tmp/ccaUBWIq.s:4421   .debug_str:0000000000000f52 .LASF256
     /tmp/ccaUBWIq.s:4309   .debug_str:0000000000000bd5 .LASF258
     /tmp/ccaUBWIq.s:3957   .debug_str:0000000000000101 .LASF259
     /tmp/ccaUBWIq.s:4439   .debug_str:0000000000000feb .LASF260
     /tmp/ccaUBWIq.s:4277   .debug_str:0000000000000a71 .LASF261
     /tmp/ccaUBWIq.s:3969   .debug_str:000000000000017a .LASF262
     /tmp/ccaUBWIq.s:4297   .debug_str:0000000000000b2a .LASF302
     /tmp/ccaUBWIq.s:4385   .debug_str:0000000000000e09 .LASF263
     /tmp/ccaUBWIq.s:4417   .debug_str:0000000000000f35 .LASF264
     /tmp/ccaUBWIq.s:3937   .debug_str:0000000000000038 .LASF265
     /tmp/ccaUBWIq.s:4267   .debug_str:0000000000000a24 .LASF266
     /tmp/ccaUBWIq.s:3959   .debug_str:000000000000011f .LASF267
     /tmp/ccaUBWIq.s:4233   .debug_str:0000000000000915 .LASF268
     /tmp/ccaUBWIq.s:4489   .debug_str:0000000000001214 .LASF269
     /tmp/ccaUBWIq.s:4287   .debug_str:0000000000000ad1 .LASF270
     /tmp/ccaUBWIq.s:4365   .debug_str:0000000000000d4b .LASF271
     /tmp/ccaUBWIq.s:4111   .debug_str:0000000000000534 .LASF272
     /tmp/ccaUBWIq.s:3931   .debug_str:000000000000000b .LASF273
     /tmp/ccaUBWIq.s:3981   .debug_str:00000000000001c2 .LASF274
     /tmp/ccaUBWIq.s:4087   .debug_str:0000000000000496 .LASF275
     /tmp/ccaUBWIq.s:60     .text:0000000000000028 .LFB93
     /tmp/ccaUBWIq.s:263    .text:0000000000000188 .LFE93
     /tmp/ccaUBWIq.s:3846   .debug_loc:0000000000000000 .LLST1
     /tmp/ccaUBWIq.s:4117   .debug_str:0000000000000572 .LASF276
     /tmp/ccaUBWIq.s:3853   .debug_loc:0000000000000023 .LLST2
     /tmp/ccaUBWIq.s:3961   .debug_str:000000000000012d .LASF278
     /tmp/ccaUBWIq.s:4023   .debug_str:00000000000002e1 .LASF279
     /tmp/ccaUBWIq.s:4215   .debug_str:000000000000087a .LASF280
GAS LISTING /tmp/ccaUBWIq.s 			page 20


     /tmp/ccaUBWIq.s:3965   .debug_str:0000000000000159 .LASF281
     /tmp/ccaUBWIq.s:4025   .debug_str:00000000000002eb .LASF283
     /tmp/ccaUBWIq.s:4085   .debug_str:0000000000000491 .LASF282
     /tmp/ccaUBWIq.s:4349   .debug_str:0000000000000cd1 .LASF284
     /tmp/ccaUBWIq.s:9      .text:0000000000000000 .LFB95
     /tmp/ccaUBWIq.s:40     .text:0000000000000028 .LFE95
     /tmp/ccaUBWIq.s:22     .text:0000000000000010 .LBB20
     /tmp/ccaUBWIq.s:29     .text:0000000000000018 .LBE20
     /tmp/ccaUBWIq.s:3860   .debug_loc:0000000000000046 .LLST0
     /tmp/ccaUBWIq.s:27     .text:0000000000000018 .LVL1
     /tmp/ccaUBWIq.s:115    .text:00000000000000b0 .LBB22
     /tmp/ccaUBWIq.s:127    .text:00000000000000b4 .LBE22
     /tmp/ccaUBWIq.s:129    .text:00000000000000b4 .LBB24
     /tmp/ccaUBWIq.s:141    .text:00000000000000bc .LBE24
     /tmp/ccaUBWIq.s:3870   .debug_loc:000000000000006c .LLST3
     /tmp/ccaUBWIq.s:148    .text:00000000000000c8 .LBB26
     /tmp/ccaUBWIq.s:159    .text:00000000000000cc .LBE26
     /tmp/ccaUBWIq.s:3878   .debug_loc:0000000000000090 .LLST4
     /tmp/ccaUBWIq.s:171    .text:00000000000000e4 .LBB28
     /tmp/ccaUBWIq.s:181    .text:00000000000000f0 .LBE28
     /tmp/ccaUBWIq.s:3886   .debug_loc:00000000000000b4 .LLST5
     /tmp/ccaUBWIq.s:178    .text:00000000000000f0 .LVL18
     /tmp/ccaUBWIq.s:192    .text:0000000000000108 .LBB30
     /tmp/ccaUBWIq.s:201    .text:0000000000000114 .LBE30
     /tmp/ccaUBWIq.s:3893   .debug_loc:00000000000000d7 .LLST6
     /tmp/ccaUBWIq.s:198    .text:0000000000000114 .LVL21
     /tmp/ccaUBWIq.s:212    .text:000000000000012c .LBB32
     /tmp/ccaUBWIq.s:221    .text:0000000000000138 .LBE32
     /tmp/ccaUBWIq.s:3900   .debug_loc:00000000000000fa .LLST7
     /tmp/ccaUBWIq.s:218    .text:0000000000000138 .LVL24
     /tmp/ccaUBWIq.s:232    .text:0000000000000150 .LBB34
     /tmp/ccaUBWIq.s:241    .text:000000000000015c .LBE34
     /tmp/ccaUBWIq.s:3907   .debug_loc:000000000000011d .LLST8
     /tmp/ccaUBWIq.s:238    .text:000000000000015c .LVL27
     /tmp/ccaUBWIq.s:79     .text:0000000000000050 .LVL2
     /tmp/ccaUBWIq.s:85     .text:0000000000000060 .LVL3
     /tmp/ccaUBWIq.s:92     .text:0000000000000074 .LVL5
     /tmp/ccaUBWIq.s:103    .text:0000000000000094 .LVL7
     /tmp/ccaUBWIq.s:110    .text:00000000000000a8 .LVL9
     /tmp/ccaUBWIq.s:146    .text:00000000000000c8 .LVL13
     /tmp/ccaUBWIq.s:163    .text:00000000000000d4 .LVL15
     /tmp/ccaUBWIq.s:170    .text:00000000000000e4 .LVL17
     /tmp/ccaUBWIq.s:185    .text:00000000000000f8 .LVL19
     /tmp/ccaUBWIq.s:191    .text:0000000000000108 .LVL20
     /tmp/ccaUBWIq.s:205    .text:000000000000011c .LVL22
     /tmp/ccaUBWIq.s:211    .text:000000000000012c .LVL23
     /tmp/ccaUBWIq.s:225    .text:0000000000000140 .LVL25
     /tmp/ccaUBWIq.s:231    .text:0000000000000150 .LVL26
     /tmp/ccaUBWIq.s:246    .text:000000000000016c .LVL28
     /tmp/ccaUBWIq.s:4461   .debug_str:00000000000010b6 .LASF285
     /tmp/ccaUBWIq.s:4089   .debug_str:000000000000049b .LASF286
     /tmp/ccaUBWIq.s:3995   .debug_str:0000000000000215 .LASF287
     /tmp/ccaUBWIq.s:4209   .debug_str:0000000000000835 .LASF288
     /tmp/ccaUBWIq.s:4275   .debug_str:0000000000000a68 .LASF290
     /tmp/ccaUBWIq.s:4523   .debug_str:0000000000001341 .LASF289
     /tmp/ccaUBWIq.s:4029   .debug_str:0000000000000317 .LASF291
     /tmp/ccaUBWIq.s:4219   .debug_str:0000000000000896 .LASF292
GAS LISTING /tmp/ccaUBWIq.s 			page 21


     /tmp/ccaUBWIq.s:4303   .debug_str:0000000000000b62 .LASF293
     /tmp/ccaUBWIq.s:87     .text:0000000000000064 .LVL4
     /tmp/ccaUBWIq.s:105    .text:0000000000000098 .LVL8
     /tmp/ccaUBWIq.s:167    .text:00000000000000dc .LVL16
     /tmp/ccaUBWIq.s:21     .text:0000000000000010 .LVL0
     /tmp/ccaUBWIq.s:124    .text:00000000000000b4 .LVL11
     /tmp/ccaUBWIq.s:138    .text:00000000000000bc .LVL12
     /tmp/ccaUBWIq.s:156    .text:00000000000000cc .LVL14
     /tmp/ccaUBWIq.s:279    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
_Z12kprintStringPKc
_ZN3TCB12createThreadEPFvPvES0_
_ZN3TCB7runningE
_ZN5Riscv14supervisorTrapEv
_ZN3TCB4joinEv
_ZN15ThreadCollector11getInstanceEv
_ZN15ThreadCollectorD1Ev
_Z5kfreePv
_ZN10IdleThread11getInstanceEv
_ZN10IdleThreadD1Ev
_ZN14TimerInterrupt11getInstanceEv
_ZN14TimerInterruptD1Ev
_ZN9Scheduler11getInstanceEv
_ZN9SchedulerD1Ev
